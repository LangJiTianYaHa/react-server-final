{"version":3,"sources":["utils/storageUtils.js","redux/action-types.js","redux/reducer.js","redux/store.js","assets/images/logo.png","api/ajax.js","api/index.js","redux/actions.js","pages/login/login.jsx","components/link-button/index.jsx","config/menuConfig.js","utils/dateUtils.js","components/header/index.jsx","components/left-nav/index.jsx","pages/home/home.jsx","pages/category/add-form.jsx","pages/category/update-form.jsx","pages/category/category.jsx","pages/product/rich-text-editor.jsx","utils/constants.js","pages/product/pictures-wall.jsx","utils/memoryUtils.js","pages/product/product-add-update.jsx","pages/product/product-detail.jsx","pages/product/product-home.jsx","pages/product/product.jsx","pages/role/add-form.jsx","pages/role/auth-form.jsx","pages/role/role.jsx","pages/user/user-form.jsx","pages/user/user.jsx","pages/charts/bar.jsx","pages/charts/line.jsx","pages/charts/pie.jsx","pages/order/order.jsx","pages/not-found/not-found.jsx","pages/admin/admin.jsx","App.js","index.js"],"names":["USER_KEY","user","store","set","remove","SET_HEAD_TITLE","RECEIVE_USER","SHOW_ERROR_MSG","RESET_USER","initUser","get","storageUtils","combineReducers","headTitle","state","action","type","data","errorMsg","createStore","reducer","composeWithDevTools","applyMiddleware","thunk","ajax","url","Promise","resolve","reject","axios","params","post","then","response","catch","error","message","reqLogin","username","password","BASE","reqCategorys","parentId","reqAddCategory","categoryName","reqUpdateCategory","categoryId","reqProducts","pageNum","pageSize","reqSearchProducts","searchName","searchType","reqCategory","reqUpdateStatus","productId","status","reqDeleteImg","name","reqAddOrUpdateProduct","product","_id","reqAddRole","roleName","reqUpdateRole","role","reqUsers","reqDeleteUser","userId","reqAddOrUpdateUser","reqWeather","city","jsonp","err","console","log","results","weather_data","dayPictureUrl","weather","setHeadTitle","receiveUser","logout","success","Login","handleSubmit","event","preventDefault","props","form","validateFields","values","a","login","this","validatePwd","rule","value","callback","length","test","to","getFieldDecorator","className","src","logo","alt","onSubmit","Item","rules","required","whitespace","min","max","pattern","initialValue","prefix","style","color","placeholder","autoComplete","validator","htmlType","Component","WrapLogin","create","connect","dispatch","result","msg","LinkButton","menuList","title","key","icon","isPublic","children","formateDate","time","date","Date","getFullYear","getMonth","getDate","getHours","getMinutes","getSeconds","Header","currentTime","now","getTime","intervalId","setInterval","setState","getWeather","getTitle","path","location","pathname","forEach","item","cItem","find","indexOf","confirm","content","onOk","clearInterval","onClick","withRouter","SubMenu","LeftNav","hasAuth","menus","child","getMenuNodes_map","menuConfig","map","getMenuNodes","reduce","pre","openKey","push","memuNodes","mode","theme","selectedKeys","defaultOpenKeys","Home","Option","AddForm","setForm","categorys","c","UpdateForm","Category","loading","parentName","subCategorys","showStatus","initColumns","columns","dataIndex","width","render","category","showUpdate","showSubCategorys","getCategorys","showCategorys","handleCancel","resetFields","addCategory","updateCategory","showAdd","marginRight","extra","dataSource","bordered","rowKey","pagination","defaultPageSize","showQuickJumper","visible","onCancel","RichTextEditor","editorState","EditorState","createEmpty","getDetail","draftToHtml","convertToRaw","getCurrentContent","uploadImageCallBack","file","xhr","XMLHttpRequest","open","FormData","append","send","addEventListener","JSON","parse","responseText","link","onEditorStateChange","html","detail","contentBlock","htmlToDraft","contentState","ContentState","createFromBlockArray","contentBlocks","createWithContent","editorStyle","border","minHeight","paddingLeft","toolbar","image","uploadCallback","present","mandatory","BASE_IMG_URL","PicturesWall","previewVisible","previewImage","fileList","getImgs","handlePreview","thumbUrl","handleChange","imgs","img","index","uid","uploadButton","accept","listType","onPreview","onChange","footer","React","TextArea","ProductAddUpdate","options","initOptions","label","isLeaf","isUpdate","pCategoryId","childOptions","option","loadData","selectedOptions","targetOption","subCategory","validatePrice","submit","pw","current","editor","desc","price","categoryIds","history","goBack","createRef","memoryUtils","fontSize","labelCol","span","wrapperCol","autosize","minRows","maxRows","addonAfter","ref","PureComponent","ProductDetail","cName1","cName2","all","dangerouslySetInnerHTML","__html","ProductHome","products","total","newStatus","updateStatus","showDetail","getProducts","list","margin","e","target","Product","component","exact","TreeNode","AuthForm","getTreeNodes","getMenus","checkedKeys","onCheck","treeNodes","nextProps","disabled","checkable","defaultExpandAll","Role","roles","isShowAdd","isShowAuth","OnRow","initColumn","create_time","getRoles","addRole","updateRole","auth","auth_name","auth_time","role_id","warning","rowSelection","selectedRowKeys","onSelect","onRow","UserForm","validatePhone","validateEmail","phone","email","User","isShow","users","roleNames","deleteUser","initRoleNames","getUsers","addOrUpdateUser","getFieldsValue","Bar","sales","stores","update","sale","getOption","text","tooltip","legend","xAxis","yAxis","series","Pie","subtext","x","trigger","formatter","orient","left","radius","center","itemStyle","emphasis","shadowBlur","shadowOffsetX","shadowColor","getOption2","backgroundColor","top","textStyle","visualMap","show","inRange","colorLightness","sort","b","roseType","labelLine","lineStyle","smooth","length2","animationType","animationEasing","animationDelay","idx","Math","random","height","Order","NotFound","goHome","replace","Footer","Sider","Content","Admin","from","Line","textAlign","App","ReactDOM","document","getElementById"],"mappings":"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","file":"static/js/main.756d3c77.chunk.js","sourcesContent":["import store from 'store'\r\n\r\n/* \r\n包含n个操作local storeage的工具函数模块\r\n*/\r\n\r\nconst USER_KEY = 'user_key'\r\n // eslint-disable-next-line \r\nexport default {\r\n\r\n  saveUser(user){\r\n    // 内部会自动转换成 json 再保存\r\n    store.set(USER_KEY,user)\r\n  },\r\n\r\n  // 如果存在, 需要返回的是对象, 如果没有值, 返回{}\r\n  getUser(){\r\n    return  store.get(USER_KEY) || {}\r\n  },\r\n\r\n  removeUser(){\r\n    store.remove(USER_KEY)\r\n  }\r\n}","/* \r\n包含n个action 的type 常量标识名称的模块\r\n*/\r\nexport const SET_HEAD_TITLE = 'set_head_title'  //设置头部标签\r\n\r\nexport const RECEIVE_USER = 'receive_user' //接收用户信息\r\n\r\nexport const SHOW_ERROR_MSG = 'show_error_msg'  //显示错误信息\r\n\r\nexport const RESET_USER = 'reset_user'  //重置user","/*\r\nreducer 函数模块: \r\n根据当前 state 和指定 action 返回一个新的 state \r\n*/\r\n\r\nimport { combineReducers } from \"redux\"\r\nimport storageUtils from \"../utils/storageUtils\"\r\nimport {RECEIVE_USER, SET_HEAD_TITLE, SHOW_ERROR_MSG,RESET_USER} from './action-types'\r\n\r\n/*管理 headTitle 状态数据的 reducer */\r\n\r\nconst initHeadTitle = ''\r\nfunction headTitle(state=initHeadTitle,action){\r\n  switch(action.type){\r\n    case SET_HEAD_TITLE:\r\n      return action.data\r\n    default:\r\n      return state\r\n  }\r\n}\r\n\r\n/*管理 user 状态数据的 reducer */\r\nconst initUser = storageUtils.getUser()\r\nfunction user(state=initUser,action){\r\n  switch(action.type){\r\n    case RECEIVE_USER:\r\n      return action.user\r\n    case SHOW_ERROR_MSG:\r\n      const errorMsg = action.errorMsg\r\n      return {...state, errorMsg}\r\n    case RESET_USER:\r\n      return {}\r\n    default:\r\n      return state\r\n  }\r\n}\r\n\r\n/*向外暴露合并后产生的总 reducer 函数 总的 state 的结构:\r\n\r\n { headerTitle: '', user: {} }\r\n \r\n */\r\nexport default combineReducers({\r\n  headTitle,\r\n  user\r\n})","/* \r\nredux  最核心的管理对象：store\r\n*/\r\n\r\nimport { applyMiddleware, createStore } from \"redux\";\r\nimport { composeWithDevTools } from \"redux-devtools-extension\";\r\nimport thunk from \"redux-thunk\";\r\nimport reducer from \"./reducer\";\r\n\r\n\r\nexport default createStore(reducer,composeWithDevTools(applyMiddleware(thunk)))\r\n// 向外暴露 store 对象\r\n// 创 建 store 对象内部会第一次调用 reducer()得到初始状态值\r\n","export default __webpack_public_path__ + \"static/media/logo.f6487143.png\";","/*\r\n能发送异步ajax请求的函数模块\r\n封装axios库\r\n函数的返回值是promise对象\r\n1. 优化1: 统一处理请求异常?\r\n    在外层包一个自己创建的promise对象\r\n    在请求出错时, 不reject(error), 而是显示错误提示\r\n2. 优化2: 异步得到不是reponse, 而是response.data\r\n   在请求成功resolve时: resolve(response.data)\r\n */\r\nimport axios from \"axios\";\r\nimport { message } from \"antd\";\r\n\r\nexport default function ajax(url, data = {}, type = \"GET\") {\r\n  return new Promise((resolve, reject) => {\r\n    let promise;\r\n    if (type === \"GET\") {\r\n      //get请求\r\n      promise = axios.get(url, { params: data });\r\n    } else {\r\n      //post请求\r\n      promise = axios.post(url, data);\r\n    }\r\n    //成功回调\r\n    promise\r\n      .then((response) => {\r\n        resolve(response.data);\r\n      })\r\n      //失败回调\r\n      .catch((error) => {\r\n        message.error(\"请求出错了！\" + error.message);\r\n      });\r\n  });\r\n}\r\n//请求登录接口\r\n// ajax('/login',{username:'Tom',password:'123456'},'POST').then()\r\n// //添加用户\r\n// ajax('/manage/user/add',{username:'Tom',password:'123456',phone:'16605189406',email:'166@qq.com',role_id:'1144714'},'POST')\r\n\r\n// .then()\r\n// .then()\r\n// .then()\r\n// .then()\r\n// .then()","/*\r\n包含n个接口请求函数的模块\r\n每个函数返回promise\r\n */\r\n\r\nimport jsonp from 'jsonp'\r\nimport {message} from 'antd'\r\nimport ajax from './ajax'\r\n\r\nconst BASE = 'api'\r\n//登录\r\nexport const  reqLogin = (username, password)=>ajax(BASE+'/login', {username, password}, 'POST')\r\n\r\n//获取一级或二级分类列表\r\nexport const reqCategorys = (parentId) =>  ajax(BASE+'/manage/category/list',{parentId})\r\n// 添加分类\r\nexport const reqAddCategory = (categoryName, parentId) => ajax(BASE + '/manage/category/add', {categoryName, parentId}, 'POST')\r\n// 更新分类\r\nexport const reqUpdateCategory = ({categoryId, categoryName}) => ajax(BASE + '/manage/category/update', {categoryId, categoryName}, 'POST')\r\n//获取商品分类列表\r\nexport const reqProducts = (pageNum,pageSize) => ajax(BASE + '/manage/product/list',{pageNum,pageSize})\r\n/*  搜索商品分页列表\r\n    searchType : 搜索类型 productName productDesc\r\n*/\r\nexport const reqSearchProducts = ({pageNum,pageSize,searchName,searchType}) => ajax(BASE + '/manage/product/search',{\r\n  pageNum,\r\n  pageSize,\r\n  [searchType]:searchName\r\n})\r\n\r\n//获取一个分类\r\nexport const reqCategory = (categoryId) => ajax(BASE + '/manage/category/info',{categoryId})\r\n\r\n//更新商品的状态（上架或者下架）\r\nexport const reqUpdateStatus = (productId,status) => ajax(BASE + '/manage/product/updateStatus',{productId,status},'POST')\r\n//删除商品的图片\r\nexport const reqDeleteImg = (name) => ajax(BASE + '/manage/img/delete',{name},'POST')\r\n\r\n//添加/修改商品\r\nexport const reqAddOrUpdateProduct = (product) =>  ajax(BASE + '/manage/product/' +  (product._id ? 'update' : 'add') ,product,'POST')\r\n\r\n//获取所有角色列表\r\nexport const reqRoles = () => ajax(BASE + '/manage/role/list')\r\n\r\n//添加角色\r\nexport const reqAddRole = (roleName) => ajax(BASE + '/manage/role/add',{roleName},'POST')\r\n\r\n//更新角色\r\nexport const reqUpdateRole = (role) => ajax(BASE + '/manage/role/update',role,'POST')\r\n\r\n//获取所有用户列表\r\nexport const reqUsers = () => ajax(BASE + '/manage/user/list')\r\n\r\n//删除用户\r\nexport const reqDeleteUser = (userId) => ajax(BASE + '/manage/user/delete',{userId},'POST')\r\n//添加/修改用户\r\nexport const reqAddOrUpdateUser = (user) =>  ajax(BASE+'/manage/user/' + (user._id ? 'update' : 'add'),user,'POST')\r\n\r\n/* \r\njsonp请求的接口请求函数\r\n*/\r\nexport const reqWeather = (city) => {\r\n\r\n  return new Promise((resolve, reject) => {\r\n    const url = `http://api.map.baidu.com/telematics/v3/weather?location=${city}&output=json&ak=3p49MVra6urFRGOT9s8UBWr2`\r\n    // 发送jsonp请求\r\n    jsonp(url, {}, (err, data) => {\r\n      console.log('jsonp()', err, data)\r\n      // 如果成功了\r\n      if (!err && data.status==='success') {\r\n        // 取出需要的数据\r\n        const {dayPictureUrl, weather} = data.results[0].weather_data[0]\r\n        resolve({dayPictureUrl, weather})\r\n      } else {\r\n        // 如果失败了\r\n        message.error('获取天气信息失败!')\r\n      }\r\n\r\n    })\r\n  })\r\n}\r\n// reqWeather('北京')\r\n/*\r\njsonp解决ajax跨域的原理\r\n  1). jsonp只能解决GET类型的ajax请求跨域问题\r\n  2). jsonp请求不是ajax请求, 而是一般的get请求\r\n  3). 基本原理\r\n   浏览器端:\r\n      动态生成<script>来请求后台接口(src就是接口的url)\r\n      定义好用于接收响应数据的函数(fn), 并将函数名通过请求参数提交给后台(如: callback=fn)\r\n   服务器端:\r\n      接收到请求处理产生结果数据后, 返回一个函数调用的js代码, 并将结果数据作为实参传入函数调用\r\n   浏览器端:\r\n      收到响应自动执行函数调用的js代码, 也就执行了提前定义好的回调函数, 并得到了需要的结果数据\r\n */","/*\r\n包含 n 个用来创建 action 的工厂函数(action creator)\r\n同步action ：  对象{type:'xxx',data:数据值}\r\n异步action：   函数 dispatch => {}\r\n */\r\n\r\nimport { message } from 'antd'\r\nimport { reqLogin } from '../api'\r\nimport storageUtils from '../utils/storageUtils'\r\nimport {SET_HEAD_TITLE,RECEIVE_USER,SHOW_ERROR_MSG,RESET_USER} from './action-types'\r\n\r\n\r\n/* \r\n设置头部标题的同步action\r\n*/\r\nexport const setHeadTitle = (headTitle) =>({type: SET_HEAD_TITLE, data:headTitle})\r\n\r\n/* \r\n接收用户信息的同步action\r\n*/\r\nexport const receiveUser = (user)=>({type:RECEIVE_USER,user})\r\n/* \r\n显示错误信息的同步action\r\n*/\r\nexport const showErrorMsg = (errorMsg)=>({type:SHOW_ERROR_MSG,errorMsg})\r\n\r\n/* \r\n登录的异步action\r\n*/\r\nexport const login = (username,password) =>{\r\n  return async dispatch =>{\r\n    //1.执行异步Ajax请求\r\n    //{status:0,data:user}   {\"status\": 1,\"msg\": \"\"}\r\n    const result = await reqLogin(username,password)\r\n    //2.1如果成功 分发成功的同步action\r\n    if(result.status === 0){\r\n      const user = result.data\r\n      //保存在local中\r\n      storageUtils.saveUser(user)\r\n      //分发接收用户的同步action\r\n      dispatch(receiveUser(user))\r\n      message.success('登陆成功')\r\n    }else{\r\n      //2.2如果失败 分发失败的同步action\r\n      const msg = result.msg\r\n      // message.error(msg)\r\n      dispatch(showErrorMsg(msg))\r\n\r\n    }\r\n  }\r\n}\r\n\r\n/* \r\n退出登录的同步action\r\n*/\r\nexport const logout = () =>{ \r\n  //删除local中的user\r\n  storageUtils.removeUser()\r\n  //返回action对象\r\n  message.success('退出登录成功')\r\n  return {type:RESET_USER}\r\n}","import React, { Component } from \"react\";\r\nimport { Form, Input, Button ,Icon} from \"antd\";\r\nimport \"./login.less\";\r\nimport logo from \"../../assets/images/logo.png\";\r\nimport { Redirect } from \"react-router-dom\";\r\nimport{connect} from 'react-redux'\r\nimport {login} from '../../redux/actions'\r\n\r\n class Login extends Component {\r\n\r\n  handleSubmit = (event)=>{\r\n\r\n    //阻止表单默认行为\r\n    event.preventDefault()\r\n    this.props.form.validateFields(async (err, values) => {\r\n      if (!err) {\r\n        //console.log('提交登录的ajax请求', values);\r\n        /* const {username,password} = values\r\n        reqLogin(username,password).then(response=>{\r\n          console.log('成功了',response.data)\r\n        }).catch(error=>{\r\n          console.log('失败了',error)\r\n        }) */\r\n        //使用asycy await简化写法\r\n        const {username,password} = values\r\n        \r\n        /* const result = await reqLogin(username,password)\r\n        console.log('请求成功了！',result)\r\n        if(result.status === 0){\r\n          //登陆成功  跳转到登录页面\r\n          message.success('登陆成功')\r\n\r\n          //保存user\r\n          const user = result.data \r\n          storageUtils.saveUser(user)\r\n          memoryUtils.user = user\r\n\r\n\r\n\r\n          this.props.history.replace('/')\r\n        }else{\r\n          //登陆失败提示失败信息\r\n          message.error(result.msg)\r\n        } */\r\n        // 调用分发异步action的函数 发登录的异步请求 有了结果后更新状态\r\n        this.props.login(username,password)\r\n      }else{\r\n        console.log('校验失败！')\r\n      }\r\n    });\r\n\r\n   //得到form对象\r\n  //  const form  = this.props.form\r\n  //  const values = form.getFieldsValue()\r\n  //  console.log('handleSubmit',values)\r\n\r\n  }\r\n\r\n  //自定义校验\r\n  validatePwd = (rule, value, callback)=>{\r\n   console.log('validatePwd:',rule, value, callback)\r\n   if(value===''){\r\n    callback('密码必须输入')\r\n   }else if(value.length<4){\r\n    callback('密码必须不能小于4位')\r\n   }else if(value.length>12){\r\n    callback('密码必须不能大于12位')\r\n   }else if(!/^[a-zA-Z0-9_]+$/.test(value)){\r\n    callback('密码必须为英文、数字或下划线组成')\r\n   }else{\r\n     callback()\r\n   }\r\n  }\r\n\r\n\r\n\r\n  render() {\r\n\r\n    //如果用户已经登陆 自动跳转到管理界面\r\n    const user =  this.props.user\r\n    if(user && user._id){\r\n      return  <Redirect to  = '/home'/>\r\n    }\r\n\r\n    // const errorMsg= this.props.user.errorMsg\r\n\r\n\r\n    const form  = this.props.form\r\n    const { getFieldDecorator } = form;\r\n\r\n    return (\r\n      <div className=\"login\">\r\n        <header className=\"login-header\">\r\n          <img src={logo} alt=\"logo\" />\r\n          <h1>React项目：后台管理系统</h1>\r\n        </header>\r\n\r\n        <section className=\"login-content\">\r\n          <div className={user.errorMsg ? 'error-msg show' : 'error-msg'}>{user.errorMsg}</div>\r\n          <h2>用户登陆</h2>\r\n          <Form onSubmit={this.handleSubmit} className=\"login-form\">\r\n            {/*\r\n              用户名/密码的的合法性要求\r\n                1). 必须输入\r\n                2). 必须大于等于4位\r\n                3). 必须小于等于12位\r\n                4). 必须是英文、数字或下划线组成\r\n               */}\r\n            <Form.Item>\r\n              {\r\n                getFieldDecorator('username',{\r\n                  //声明式验证\r\n                  rules: [\r\n                    { required: true,whitespace:true, message: '用户名必须输入' },\r\n                    {min:4,message:'用户名必须大于4位'},\r\n                    {max:12,message:'用户名必须小于12位'},\r\n                    {pattern:/^[a-zA-Z0-9_]+$/,message:'用户名必须为英文、数字或下划线组成'}\r\n                  \r\n                  ],\r\n                  initialValue:'admin'  //指定初始值\r\n                })(\r\n                  <Input\r\n                  prefix={\r\n                    <Icon type=\"user\" style={{ color: \"rgba(0,0,0,.25)\" }} />\r\n                  }\r\n                  placeholder=\"用户名\"\r\n                  autoComplete=\"off\"  //取消默认的input历史记录\r\n                />\r\n                )\r\n              }\r\n            </Form.Item>\r\n            <Form.Item>\r\n\r\n            {\r\n                getFieldDecorator('password',{\r\n                  rules:[\r\n                    {validator:this.validatePwd}\r\n                  ]\r\n                })(\r\n                  <Input\r\n                  prefix={\r\n                    <Icon type=\"lock\" style={{ color: \"rgba(0,0,0,.25)\" }} />\r\n                  }\r\n                  type=\"password\"\r\n                  placeholder=\"密码\"\r\n                />\r\n                )\r\n              }\r\n            </Form.Item>\r\n            <Form.Item>\r\n              <Button\r\n                type=\"primary\"\r\n                htmlType=\"submit\"\r\n                className=\"login-form-button\"\r\n              >\r\n                登陆\r\n              </Button>\r\n            </Form.Item>\r\n          </Form>\r\n        </section>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n/* \r\n收集数据\r\n表单验证\r\n*/\r\nconst WrapLogin = Form.create()(Login);\r\nexport default  connect(\r\n  state => ({user:state.user}),\r\n  {login}\r\n)(WrapLogin) ;\r\n\r\n","import React from \"react\";\r\nimport './index.less'\r\n\r\n/* \r\n\r\n 通用的 看起来像链接的button组件\r\n*/\r\nexport default function LinkButton(props){\r\n  return <button {...props}  className='link-button'></button>\r\n\r\n}\r\n","const menuList = [\r\n  {\r\n    title: '首页', // 菜单标题名称\r\n    key: '/home', // 对应的path\r\n    icon: 'home', // 图标名称\r\n    isPublic: true, // 公开的\r\n    \r\n  },\r\n  {\r\n    title: '商品',\r\n    key: '/products',\r\n    icon: 'appstore',\r\n    children: [ // 子菜单列表\r\n      {\r\n        title: '品类管理',\r\n        key: '/category',\r\n        icon: 'bars'\r\n      },\r\n      {\r\n        title: '商品管理',\r\n        key: '/product',\r\n        icon: 'tool'\r\n      },\r\n    ]\r\n  },\r\n\r\n  {\r\n    title: '用户管理',\r\n    key: '/user',\r\n    icon: 'user'\r\n  },\r\n  {\r\n    title: '角色管理',\r\n    key: '/role',\r\n    icon: 'safety',\r\n  },\r\n\r\n  {\r\n    title: '图形图表',\r\n    key: '/charts',\r\n    icon: 'area-chart',\r\n    children: [\r\n      {\r\n        title: '柱形图',\r\n        key: '/charts/bar',\r\n        icon: 'bar-chart'\r\n      },\r\n      {\r\n        title: '折线图',\r\n        key: '/charts/line',\r\n        icon: 'line-chart'\r\n      },\r\n      {\r\n        title: '饼图',\r\n        key: '/charts/pie',\r\n        icon: 'pie-chart'\r\n      },\r\n    ]\r\n  },\r\n\r\n  {\r\n    title: '订单管理',\r\n    key: '/order',\r\n    icon: 'windows',\r\n  },\r\n]\r\n\r\nexport default menuList","/*\r\n\r\n包含n 个日期时间处理的工具函数模块\r\n*/\r\n\r\n\r\n/*\r\n格式化日期\r\n*/\r\nexport function formateDate(time) {\r\n  if (!time) return ''\r\n  let date = new Date(time)\r\n  return date.getFullYear() + '-' + (date.getMonth() + 1) + '-' + date.getDate()\r\n  + ' ' + date.getHours() + ':' + date.getMinutes() + ':' + date.getSeconds()\r\n  }","import React, { Component } from \"react\";\r\nimport {withRouter} from 'react-router-dom'\r\nimport { Modal} from 'antd';\r\nimport { connect } from \"react-redux\";\r\n\r\n\r\nimport LinkButton from '../link-button/index'\r\nimport { reqWeather } from \"../../api/index\";\r\nimport menuList from \"../../config/menuConfig\";\r\n\r\nimport { formateDate } from \"../../utils/dateUtils\";\r\nimport {logout} from '../../redux/actions'\r\nimport \"./index.less\";\r\n\r\nclass Header extends Component {\r\n  state = {\r\n    currentTime: formateDate(Date.now()), // 当前时间字符串\r\n    dayPictureUrl: \"\", // 天气图片url\r\n    weather: \"\", // 天气的文本\r\n  };\r\n\r\n  //实时获取时间\r\n  getTime = () => {\r\n    this.intervalId =  setInterval(() => {\r\n      const currentTime = formateDate(Date.now());\r\n      this.setState({ currentTime });\r\n    }, 1000);\r\n  };\r\n  //实时获取天气\r\n  getWeather = async () => {\r\n    const { dayPictureUrl, weather } = await reqWeather(\"北京\");\r\n    this.setState({ dayPictureUrl, weather });\r\n  };\r\n\r\n  // 获取标题\r\n  getTitle = ()=>{\r\n    // 得到当前请求路径\r\n    const path = this.props.location.pathname\r\n    let title\r\n    menuList.forEach((item)=>{\r\n    //请输入代码体\r\n      if(item.key === path){\r\n        title = item.title\r\n\r\n      }else if(item.children){\r\n        const cItem = item.children.find(cItem => path.indexOf(cItem.key) === 0)\r\n        if(cItem){\r\n          title = cItem.title\r\n        }\r\n      }\r\n    })\r\n    return title\r\n\r\n  }\r\n\r\n  //退出登录\r\n  logout = ()=>{\r\n    const { confirm } = Modal;\r\n    confirm({\r\n      content: '确定退出吗？',\r\n      onOk:()=>{\r\n        // console.log('OK');\r\n        this.props.logout()\r\n      },\r\n      \r\n    });\r\n\r\n\r\n  }\r\n\r\n  /*\r\n  第一次render()之后执行一次\r\n  一般在此执行异步操作: 发ajax请求/启动定时器\r\n   */\r\n  componentDidMount() {\r\n    // 获取当前的时间\r\n    this.getTime();\r\n    // 获取当前天气\r\n    this.getWeather();\r\n  }\r\n\r\n  componentWillUnmount(){\r\n    //清除定时器\r\n    clearInterval(this.intervalId)\r\n  }\r\n\r\n  render() {\r\n    const { currentTime, dayPictureUrl, weather } = this.state;\r\n    const username = this.props.user.username\r\n\r\n    //根据当前需要显示title\r\n    // const title = this.getTitle()\r\n    const title = this.props.headTitle\r\n\r\n    return (\r\n      <div className=\"header\">\r\n        <div className=\"header-top\">\r\n          <span>欢迎，{username}</span>\r\n          <LinkButton  onClick = {this.logout}>退出</LinkButton>\r\n        </div>\r\n        <div className=\"header-bottom\">\r\n          <div className=\"header-bottom-left\">{title}</div>\r\n          <div className=\"header-bottom-right\">\r\n            <span>{currentTime}</span>\r\n            <img\r\n              src={dayPictureUrl}\r\n              alt=\"weather\"\r\n            />\r\n\r\n            <span>{weather}</span>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default connect(\r\n  state => ({headTitle:state.headTitle,user:state.user}),\r\n  {\r\n    logout\r\n  }\r\n)(withRouter(Header)) \r\n","import React, { Component } from 'react'\r\nimport {Link , withRouter} from 'react-router-dom'\r\nimport { Menu, Icon  } from 'antd';\r\nimport menuConfig from '../../config/menuConfig'\r\nimport { connect } from 'react-redux';\r\nimport {setHeadTitle} from '../../redux/actions'\r\n\r\n\r\nimport logo from '../../assets/images/logo.png'\r\nimport './index.less'\r\n\r\nconst { SubMenu } = Menu;\r\n\r\n\r\nclass LeftNav extends Component {\r\n\r\n  /* \r\n  判断当前登录用户对item 是否有权限\r\n  */\r\n  hasAuth = (item)=>{\r\n    const  {key,isPublic} = item\r\n    const menus = this.props.user.role.menus\r\n    const username = this.props.user.username\r\n    /* \r\n      1.如果当前用户是admin\r\n      2.当前用户有此item权限：key有没有在menus中\r\n      3.如果当前用户是公开的\r\n    */\r\n   if(username === 'admin' || isPublic || menus.indexOf(key) !== -1){\r\n    return true\r\n   }else if(item.children){  //4.当前用户有此item的某个子item的权限\r\n    return !!item.children.find(child => menus.indexOf(child.key) !== -1)\r\n   }\r\n   return false\r\n  }\r\n\r\n  /* \r\n  方法1： 根据menu的数据生成对应的标签数组\r\n  使用map+递归\r\n  */\r\n\r\n  getMenuNodes_map = (menuConfig)=>{\r\n    return menuConfig.map((item)=>{\r\n      //如果没有childern\r\n      if(!item.children){\r\n        return (\r\n          <Menu.Item key={item.key}>\r\n              <Link to={item.key}>\r\n                <Icon type={item.icon}/>\r\n                <span>{item.title} </span>\r\n              </Link>\r\n              \r\n            </Menu.Item>\r\n        )\r\n      }else{\r\n        //如果有childern\r\n        return (\r\n          <SubMenu\r\n            key={item.key}\r\n            title={\r\n              <span>\r\n                <Icon type={item.icon} />\r\n                <span>{item.title} </span>\r\n              </span>\r\n            }\r\n          >\r\n            {\r\n              this.getMenuNodes(item.children)\r\n            }\r\n          </SubMenu>\r\n        )\r\n      }\r\n    })\r\n  }\r\n\r\n  /* \r\n  方法2： 根据menu的数据生成对应的标签数组\r\n  reduce+递归\r\n  */\r\n  getMenuNodes = (menuConfig)=>{\r\n    // 得到当前请求路径, 作为选中菜单项的 key\r\n    const path = this.props.location.pathname\r\n\r\n    /* \r\n    arr.reduce(function(prev,cur,index,arr){\r\n    ...\r\n    }, init);\r\n    arr 表示原数组；\r\n    prev 表示上一次调用回调时的返回值，或者初始值 init;\r\n    cur 表示当前正在处理的数组元素；\r\n    index 表示当前正在处理的数组元素的索引，若提供 init 值，则索引为0，否则索引为1；\r\n    init 表示初始值。\r\n    */\r\n    return menuConfig.reduce((pre,item)=>{\r\n      /* \r\n      如果当前用户有item对应的权限  才需要显示对应的菜单项\r\n      */\r\n     if(this.hasAuth(item)){\r\n\r\n      if(!item.children){\r\n\r\n        //判断item是否为当前 对应的item\r\n        if(item.key === path || path.indexOf(item.key) ===0){\r\n          //更新redux中的headTitle状态\r\n           this.props.setHeadTitle(item.title)\r\n        }\r\n        pre.push((\r\n          <Menu.Item key={item.key}  >\r\n              <Link to={item.key}  onClick={() => this.props.setHeadTitle(item.title)}>\r\n                <Icon type={item.icon}/>\r\n                <span>{item.title} </span>\r\n              </Link>\r\n              \r\n            </Menu.Item>\r\n        ))\r\n      }else{\r\n\r\n        //查找一个与当前请求路径匹配的子item\r\n        // const cItem =  item.children.find(cItem => cItem.key === path)\r\n        const cItem =  item.children.find(cItem => path.indexOf(cItem.key) === 0)\r\n        // 如果存在 说明当前item的子列表需要打开\r\n        if(cItem){\r\n          this.openKey = item.key\r\n        }\r\n        pre.push((\r\n          <SubMenu\r\n            key={item.key}\r\n            title={\r\n              <span>\r\n                <Icon type={item.icon} />\r\n                <span>{item.title} </span>\r\n              </span>\r\n            }\r\n          >\r\n            {\r\n              this.getMenuNodes(item.children)\r\n            }\r\n          </SubMenu>\r\n        ))\r\n      }\r\n     }\r\n      \r\n      return pre\r\n    },[])\r\n  }\r\n\r\n  // 在第一次render之前执行一次\r\n  UNSAFE_componentWillMount(){\r\n    this.memuNodes = this.getMenuNodes(menuConfig)\r\n  }\r\n\r\n  render() {\r\n    // debugger\r\n    // const memuNodes = this.getMenuNodes(menuConfig)\r\n\r\n    // 得到当前请求路径, 作为选中菜单项的 key\r\n    let  path = this.props.location.pathname\r\n    console.log(path)\r\n    //当前请求的是商品或其子路由界面\r\n    if(path.indexOf('/product') === 0){\r\n      path = '/product'\r\n    }\r\n\r\n    //得到需要打开的openKey\r\n    const  openKey = this.openKey\r\n\r\n    return (\r\n      <div className='left-nav'>\r\n        <Link to = '/' className = 'left-nav-header'>\r\n          <img src={logo} alt=\"logo\" />\r\n          <h1>硅谷后台</h1>\r\n        </Link>\r\n\r\n        \r\n\r\n        <Menu\r\n          mode=\"inline\"\r\n          theme=\"dark\"\r\n          selectedKeys = {[path]}\r\n          defaultOpenKeys={[openKey]}\r\n\r\n        >\r\n          {/* <Menu.Item key=\"/home\">\r\n            <Link to = '/home'>\r\n              <Icon type=\"pie-chart\" />\r\n              <span>首页</span>\r\n            </Link>\r\n          </Menu.Item>\r\n          \r\n          <SubMenu\r\n            key=\"sub1\"\r\n            title={\r\n              <span>\r\n                <Icon type=\"mail\" />\r\n                <span>商品 </span>\r\n              </span>\r\n            }\r\n          >\r\n            <Menu.Item key=\"/category\">\r\n              <Link to='/category'>\r\n                <Icon type=\"mail\" />\r\n                <span>品类管理 </span>\r\n              </Link>\r\n              \r\n            </Menu.Item>\r\n            <Menu.Item key=\"/product\">\r\n              <Link to = '/product'>\r\n                <Icon type=\"mail\" />\r\n                <span>商品管理 </span>\r\n              </Link>\r\n              \r\n            </Menu.Item>\r\n          </SubMenu>\r\n\r\n          <Menu.Item key=\"/user\">\r\n            <Link to = '/user'>\r\n              <Icon type=\"pie-chart\" />\r\n              <span>用户管理</span>\r\n            </Link>\r\n          </Menu.Item>\r\n\r\n          <Menu.Item key=\"/role\">\r\n            <Link to = '/role'>\r\n              <Icon type=\"pie-chart\" />\r\n              <span>角色管理</span>\r\n            </Link>\r\n          </Menu.Item> */}\r\n\r\n          {\r\n            // this.getMenuNodes(menuConfig)\r\n            this.memuNodes\r\n          }\r\n\r\n          \r\n        </Menu>\r\n      </div>\r\n    )\r\n  }\r\n}\r\n/*withRouter: 高阶组件: 包装非路由组件返回一个包装后的新组件, \r\n新组件会向被包装组件传递 history/location/match 属性 */\r\nexport default connect(\r\n  state => ({user:state.user}),\r\n  {setHeadTitle}\r\n)(withRouter(LeftNav)) ","import React, { Component } from 'react'\r\n// import { Chart, Interval, Tooltip } from 'bizcharts'\r\nimport './home.less'\r\n\r\n\r\nexport default class Home extends Component {\r\n  render() {\r\n    return (\r\n      <div className='home'>\r\n        欢迎使用硅谷后台管理系统\r\n      </div>\r\n    )\r\n  }\r\n\r\n}\r\n","import React, { Component } from \"react\";\r\nimport { Form, Input, Select } from \"antd\";\r\nimport PropTypes from \"prop-types\";\r\n\r\nconst Item = Form.Item;\r\nconst Option = Select.Option;\r\n\r\nclass AddForm extends Component {\r\n  static propTypes = {\r\n    categorys: PropTypes.array.isRequired, // 一级分类数组\r\n    parentId: PropTypes.string.isRequired, //父分类id\r\n    setForm : PropTypes.func.isRequired //  用来传递form对象的函数\r\n  }\r\n\r\n  UNSAFE_componentWillMount(){\r\n    this.props.setForm(this.props.form)\r\n  }\r\n\r\n  render() {\r\n    const { getFieldDecorator } = this.props.form;\r\n    const { categorys, parentId } = this.props;\r\n    return (\r\n      <Form>\r\n        <Item>\r\n          {getFieldDecorator(\"parentId\", {\r\n            initialValue: parentId,\r\n          })(\r\n            <Select>\r\n              <Option value=\"0\">一级分类</Option>\r\n              {\r\n                categorys.map(c => <Option value={c._id}>{c.name}</Option>)\r\n              }\r\n            </Select>\r\n          )}\r\n        </Item>\r\n\r\n        <Item>\r\n          {getFieldDecorator(\"categoryName\", {\r\n            initialValue: '',\r\n            rules: [\r\n              {\r\n                required:true,message:'分类名称必须输入'\r\n              }\r\n            ]\r\n          })(<Input placeholder=\"请输入分类名称\" />)}\r\n        </Item>\r\n      </Form>\r\n    )\r\n  }\r\n}\r\nexport default Form.create()(AddForm);\r\n","import React, { Component } from \"react\";\r\nimport { Form, Input } from \"antd\";\r\nimport PropTypes from 'prop-types'\r\nconst Item = Form.Item;\r\n\r\nclass UpdateForm extends Component {\r\n\r\n  static propTypes = {\r\n    categoryName:PropTypes.string.isRequired,\r\n    setForm : PropTypes.func.isRequired\r\n  }\r\n\r\n  UNSAFE_componentWillMount(){\r\n    //将form对象通过setForm传递父组件\r\n    this.props.setForm(this.props.form)\r\n  }\r\n\r\n\r\n\r\n  render() {\r\n    const {categoryName } = this.props\r\n    const { getFieldDecorator } = this.props.form;\r\n    return (\r\n      <Form>\r\n        <Item>\r\n          {getFieldDecorator('categoryName',{\r\n              initialValue:categoryName,\r\n              rules: [\r\n                {\r\n                  required:true,message:'分类名称必须输入'\r\n                }\r\n              ]\r\n            }\r\n          )(\r\n            <Input placeholder= '请输入分类名称'/>\r\n          )}\r\n        </Item>\r\n      </Form>\r\n    );\r\n  }\r\n}\r\nexport default Form.create()(UpdateForm);\r\n","import React, { Component } from \"react\";\r\nimport { Card, Table, Icon, Button, message, Modal } from \"antd\";\r\nimport LinkButton from \"../../components/link-button/index\";\r\nimport { reqCategorys, reqUpdateCategory, reqAddCategory } from \"../../api\";\r\nimport AddForm from \"./add-form\";\r\nimport UpdateForm from \"./update-form\";\r\n\r\n/* \r\n商品分类路由\r\n*/\r\n\r\nexport default class Category extends Component {\r\n  state = {\r\n    categorys: [], //一级分类列表\r\n    loading: false, //加载状态（图标）\r\n    parentId: \"0\", // 父分类ID\r\n    parentName: \"\", //父分类名称\r\n    subCategorys: [], //子分类列表\r\n    showStatus: 0, //标识添加/更新的确认框是否显示 0： 不显示  1 ：显示添加  2：显示更新\r\n  };\r\n\r\n  /* \r\n    初始化Table列的数组\r\n  */\r\n  initColumns = () => {\r\n    this.columns = [\r\n      {\r\n        title: \"分类的名称\",\r\n        dataIndex: \"name\", //显示数据对应的属性名\r\n      },\r\n      {\r\n        title: \"操作\",\r\n        width: 300,\r\n        render: (\r\n          category //会把分类的对象传递过来\r\n        ) => (\r\n          //返回需要显示的界面标签\r\n          <span>\r\n            <LinkButton\r\n              onClick={() => {\r\n                this.showUpdate(category);\r\n              }}\r\n            >\r\n              修改分类\r\n            </LinkButton>\r\n            {this.state.parentId === \"0\" ? (\r\n              <LinkButton onClick={() => this.showSubCategorys(category)}>\r\n                查看子分类\r\n              </LinkButton>\r\n            ) : null}\r\n          </span>\r\n        ),\r\n      },\r\n    ];\r\n  };\r\n\r\n  /* \r\n 异步获取一级/二级分类列表显示\r\n parentId: 如果没有指定，根据状态中的parentId请求\r\n          如果指定根据指定的请求\r\n */\r\n  getCategorys = async (parentId) => {\r\n    //在发请求前显示loading\r\n    this.setState({ loading: true });\r\n    parentId = parentId || this.state.parentId;\r\n    const result = await reqCategorys(parentId);\r\n    //请求完成后 隐藏loading\r\n    this.setState({ loading: false });\r\n    if (result.status === 0) {\r\n      //取出分类数组数据\r\n      const categorys = result.data;\r\n      if (parentId === \"0\") {\r\n        //更新一级分类数组\r\n        this.setState({ categorys });\r\n      } else {\r\n        this.setState({ subCategorys: categorys });\r\n      }\r\n      //更新二级分类数组\r\n    } else {\r\n      message.error(\"获取分类列表失败\");\r\n    }\r\n  };\r\n  /* \r\n  显示指定一级分类对象的二级列表\r\n  */\r\n  showSubCategorys = (category) => {\r\n    //更新状态\r\n    this.setState(\r\n      {\r\n        parentId: category._id,\r\n        parentName: category.name,\r\n      },\r\n      () => {\r\n        //在状态更新且render后执行\r\n        //显示二级分类列表\r\n        this.getCategorys();\r\n      }\r\n    );\r\n    console.log(\"parentId:\", this.state.parentId);\r\n  };\r\n\r\n  /* \r\n    点击显示一级分类列表\r\n  */\r\n  showCategorys = () => {\r\n    this.setState({\r\n      parentId: \"0\",\r\n      parentName: \"\",\r\n      subCategorys: [],\r\n    });\r\n  };\r\n\r\n  /* \r\n  响应点击取消 隐藏确认框\r\n  */\r\n  handleCancel = () => {\r\n    this.setState({\r\n      showStatus: 0,\r\n    });\r\n    //清除输入数据\r\n    this.form.resetFields();\r\n  };\r\n  /* \r\n  添加分类\r\n  */\r\n  addCategory = () => {\r\n    this.form.validateFields(async (err, values) => {\r\n      if (!err) {\r\n        //隐藏确认框\r\n        this.setState({\r\n          showStatus: 0,\r\n        });\r\n\r\n        //收集数据 并提交添加分类的请求\r\n        // const { parentId, categoryName } = this.form.getFieldsValue();\r\n        const { parentId, categoryName } = values;\r\n        this.form.resetFields();\r\n        const result = await reqAddCategory(categoryName, parentId);\r\n        //重新获取添加分类的请求\r\n        if (result.status === 0) {\r\n          if (parentId === this.state.parentId) {\r\n            this.getCategorys();\r\n          } else if (parentId === \"0\") {\r\n            // 在二级分类列表下添加一级分类项  重新获取一级分类列表  但不需要显示一级分类列表\r\n            this.getCategorys(\"0\");\r\n          }\r\n        }\r\n      }\r\n    });\r\n  };\r\n\r\n  /* \r\n 更新分类\r\n */\r\n  updateCategory = () => {\r\n    console.log(\"updateCategory\");\r\n    //进行表单验证\r\n    this.form.validateFields(async (err, values) => {\r\n      if (!err) {\r\n        //1.隐藏确认框\r\n        this.setState({\r\n          showStatus: 0,\r\n        });\r\n        // 准备数据\r\n        const categoryId = this.category._id;\r\n        // const categoryName = this.form.getFieldValue('categoryName')\r\n        const { categoryName } = values;\r\n        //清除输入数据\r\n        this.form.resetFields();\r\n        //2.发请求更新分类\r\n        const result = await reqUpdateCategory({ categoryId, categoryName });\r\n        if (result.status === 0) {\r\n          //3.重新显示列表\r\n          this.getCategorys();\r\n        }\r\n      }\r\n    });\r\n  };\r\n  /* \r\n 显示添加确认框\r\n*/\r\n  showAdd = () => {\r\n    this.setState({\r\n      showStatus: 1,\r\n    });\r\n  };\r\n  /* \r\n显示修改确认框\r\n*/\r\n  showUpdate = (category) => {\r\n    //保存分类对象\r\n    this.category = category;\r\n    this.setState({\r\n      showStatus: 2,\r\n    });\r\n  };\r\n\r\n  /* \r\n 为第一次render准备数据\r\n */\r\n  UNSAFE_componentWillMount() {\r\n    this.initColumns();\r\n  }\r\n  /* \r\n  执行异步任务：发异步ajax请求\r\n  */\r\n  componentDidMount() {\r\n    this.getCategorys();\r\n  }\r\n\r\n  render() {\r\n    //读取状态数据\r\n    const {\r\n      categorys,\r\n      loading,\r\n      subCategorys,\r\n      parentId,\r\n      parentName,\r\n      showStatus,\r\n    } = this.state;\r\n\r\n    //读取指定的分类\r\n    const category = this.category || {};\r\n    //card 的右侧\r\n    const title =\r\n      parentId === \"0\" ? (\r\n        \"一级分类列表\"\r\n      ) : (\r\n        <span>\r\n          <LinkButton onClick={this.showCategorys}>一级分类列表</LinkButton>\r\n          <Icon type=\"arrow-right\" style={{ marginRight: 10 }} />\r\n          <span>{parentName}</span>\r\n        </span>\r\n      );\r\n    //card的右侧\r\n    const extra = (\r\n      <Button type=\"primary\" onClick={this.showAdd}>\r\n        <Icon type=\"plus\" />\r\n        添加\r\n      </Button>\r\n    );\r\n\r\n    return (\r\n      <Card title={title} extra={extra}>\r\n        <Table\r\n          dataSource={parentId === \"0\" ? categorys : subCategorys}\r\n          columns={this.columns}\r\n          bordered\r\n          rowKey=\"_id\"\r\n          pagination={{ defaultPageSize: 5, showQuickJumper: true }}\r\n          loading={loading}\r\n        />\r\n        <Modal\r\n          title=\"添加分类\"\r\n          visible={showStatus === 1}\r\n          onOk={this.addCategory}\r\n          onCancel={this.handleCancel}\r\n        >\r\n          <AddForm\r\n            categorys={categorys}\r\n            parentId={parentId}\r\n            setForm={(form) => {\r\n              this.form = form;\r\n            }}\r\n          />\r\n        </Modal>\r\n\r\n        <Modal\r\n          title=\"更新分类\"\r\n          visible={showStatus === 2}\r\n          onOk={this.updateCategory}\r\n          onCancel={this.handleCancel}\r\n        >\r\n          <UpdateForm\r\n            categoryName={category.name}\r\n            setForm={(form) => {\r\n              this.form = form;\r\n            }}\r\n          />\r\n        </Modal>\r\n      </Card>\r\n    );\r\n  }\r\n}\r\n","/* \r\n用来指定商品详情的富文本编辑器  \r\n\r\n*/\r\nimport React, { Component } from \"react\"\r\nimport PropTypes from \"prop-types\"\r\nimport { EditorState, convertToRaw, ContentState } from \"draft-js\"\r\nimport { Editor } from \"react-draft-wysiwyg\"\r\nimport draftToHtml from \"draftjs-to-html\"\r\nimport htmlToDraft from \"html-to-draftjs\"\r\nimport \"react-draft-wysiwyg/dist/react-draft-wysiwyg.css\"\r\n\r\nexport default class RichTextEditor extends Component {\r\n  static propTypes = {\r\n    detail: PropTypes.string,\r\n  }\r\n\r\n  state = {\r\n    //创建一个没有内容的编辑对象\r\n    editorState: EditorState.createEmpty(),\r\n  }\r\n\r\n  constructor(props) {\r\n    super(props)\r\n    const html = this.props.detail\r\n    if (html) {\r\n      const contentBlock = htmlToDraft(html)\r\n      if (contentBlock) {\r\n        const contentState = ContentState.createFromBlockArray(\r\n          contentBlock.contentBlocks\r\n        )\r\n        const editorState = EditorState.createWithContent(contentState)\r\n        this.state = {\r\n          editorState,\r\n        }\r\n      }\r\n    } else {\r\n      this.state = {\r\n        //创建一个没有内容的编辑对象\r\n        editorState: EditorState.createEmpty(),\r\n      }\r\n    }\r\n  }\r\n\r\n  getDetail = () => {\r\n    //返回输入数据对应得HTML格式的文本\r\n    return draftToHtml(\r\n      convertToRaw(this.state.editorState.getCurrentContent())\r\n    )\r\n  }\r\n\r\n  uploadImageCallBack = (file) => {\r\n    return new Promise((resolve, reject) => {\r\n      const xhr = new XMLHttpRequest()\r\n      xhr.open(\"POST\", \"/manage/img/upload\")\r\n      const data = new FormData()\r\n      data.append(\"image\", file)\r\n      xhr.send(data)\r\n      xhr.addEventListener(\"load\", () => {\r\n        const response = JSON.parse(xhr.responseText)\r\n        const url = response.data.url //得到图片的URL\r\n        resolve({\r\n          data: {\r\n            link: url,\r\n          },\r\n        })\r\n      })\r\n      xhr.addEventListener(\"error\", () => {\r\n        const error = JSON.parse(xhr.responseText)\r\n        reject(error)\r\n      })\r\n    })\r\n  }\r\n\r\n  /* \r\n  输入过程中实时的回调\r\n  */\r\n  onEditorStateChange = (editorState) => {\r\n    this.setState({\r\n      editorState,\r\n    })\r\n  }\r\n\r\n  render() {\r\n    const { editorState } = this.state\r\n    return (\r\n      <Editor\r\n        editorState={editorState}\r\n        editorStyle={{\r\n          border: \"1px solid black\",\r\n          minHeight: 200,\r\n          paddingLeft: 10,\r\n        }}\r\n        onEditorStateChange={this.onEditorStateChange}\r\n        toolbar={{\r\n          image: {\r\n            uploadCallback: this.uploadImageCallBack,\r\n            alt: { present: true, mandatory: true },\r\n          },\r\n        }}\r\n      />\r\n    )\r\n  }\r\n}\r\n","/* \r\n包含一些常量值的模块\r\n*/\r\nexport const PAGE_SIZE = 2\r\nexport const BASE_IMG_URL = 'http://localhost:5000/upload/'","import React from \"react\";\r\nimport PropTypes from 'prop-types'\r\nimport { Upload, Icon, Modal ,message} from \"antd\";\r\nimport {reqDeleteImg} from '../../api'\r\nimport {BASE_IMG_URL} from '../../utils/constants'\r\n\r\n/* \r\n用于图片上传的组件\r\n*/\r\nexport default class PicturesWall extends React.Component {\r\n\r\n\r\n  static propTypes = {\r\n    imgs: PropTypes.array\r\n  }\r\n\r\n  state = {\r\n    previewVisible: false,  //标识是否显示大图预览的Modal\r\n    previewImage: \"\", //大图的URL\r\n    fileList: [\r\n      /* {\r\n        uid: \"-1\", //每个file都有自己唯一的id\r\n        name: \"image.png\", //图片文件名\r\n        status: \"done\", //图片状态 uploading -已上传  uploading  正在上传 removed 已删除\r\n        //图片地址\r\n        url: \"https://zos.alipayobjects.com/rmsportal/jkjgkEfvpUPVyRjUImniVslZfWPnJuuZ.png\",\r\n      } */\r\n    ]\r\n  };\r\n  constructor(props){\r\n    super(props)\r\n\r\n    let fileList = []\r\n    const {imgs} = this.props\r\n    if(imgs && imgs.length > 0){\r\n      fileList = imgs.map((img,index) =>({\r\n        uid: -index, //每个file都有自己唯一的id\r\n        name: img, //图片文件名\r\n        status: \"done\", //图片状态 uploading -已上传  uploading  正在上传 removed 已删除\r\n        //图片地址\r\n        url: BASE_IMG_URL + img\r\n\r\n      }))\r\n\r\n    }\r\n\r\n    //初始化状态\r\n    this.state = {\r\n      previewVisible: false,  //标识是否显示大图预览的Modal\r\n      previewImage: \"\", //大图的URL\r\n      fileList//所以已上传图片的数组\r\n    }\r\n  }\r\n\r\n  /* \r\n  获取所以已上传图片文件名的数组\r\n  */\r\n getImgs = ()=>{\r\n   return  this.state.fileList.map(file => file.name)\r\n }\r\n\r\n  /* \r\n  隐藏Modal\r\n  */\r\n  handleCancel = () => this.setState({ previewVisible: false });\r\n\r\n  handlePreview =  (file) => {\r\n    console.log('handlePreview'+ file)\r\n    //显示file指定的大图\r\n    this.setState({\r\n      previewImage: file.url || file.thumbUrl,\r\n      previewVisible: true,\r\n    });\r\n  };\r\n\r\n  /*\r\n  file  当前操作的图片文件（上传/删除）\r\n  fileList 所以已上传图片文件对象的数组 \r\n  */\r\n  handleChange = async ({file, fileList }) => {\r\n    console.log(file.status,fileList.length)\r\n    console.log('file',fileList)\r\n    console.log('fileList',fileList)\r\n    console.log(file === fileList[fileList.length-1])\r\n\r\n    //一旦上传成功 对file的信息修正（name url）\r\n    if(file.status === 'done'){\r\n      const result = file.response //{status:0,data:{name:'',url:''}}\r\n      if(result.status === 0){\r\n        message.success('上传图片成功')\r\n        const {name,url} = result.data\r\n        file = fileList[fileList.length-1]\r\n        file.name = name\r\n        file.url = url\r\n      }else{\r\n        message.error('上传图片失败')\r\n      }\r\n    }else if(file.status === 'removed'){ //删除图片\r\n      const result = await reqDeleteImg(file.name)\r\n      if(result.status === 0){\r\n        message.success('删除图片成功！')\r\n      }else{\r\n          message.error('删除图片失败！')\r\n      }\r\n    }\r\n    //在操作（上传/下载）过程中更新fileList的状态\r\n    this.setState({ fileList })\r\n  };\r\n\r\n  render() {\r\n    const { previewVisible, previewImage, fileList } = this.state;\r\n    const uploadButton = (\r\n      <div>\r\n        <Icon type=\"plus\" />\r\n        <div className=\"ant-upload-text\">Upload</div>\r\n      </div>\r\n    );\r\n    return (\r\n      <div>\r\n        <Upload\r\n          accept=\"image/*\" //指定接收图片格式\r\n          action=\"/manage/img/upload\"//上传图片的接口地址\r\n          name='image' //请求参数名\r\n          listType=\"picture-card\" //卡片样式\r\n          fileList={fileList}     //所以已经上传图片的数组\r\n          onPreview={this.handlePreview}\r\n          onChange={this.handleChange}\r\n        >\r\n          {fileList.length >= 8 ? null : uploadButton}\r\n        </Upload>\r\n        <Modal\r\n          visible={previewVisible}\r\n          footer={null}\r\n          onCancel={this.handleCancel}\r\n        >\r\n          <img alt=\"example\" style={{ width: \"100%\" }} src={previewImage} />\r\n        </Modal>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n","/*\r\n用来在内存保存一些数据的工具模块\r\n */\r\n// eslint-disable-next-line\r\nexport default {\r\n  user: {}, // 保存当前登陆的user\r\n  product: {}, // 指定的商品对象\r\n \r\n}","import React, {  PureComponent } from 'react'\r\nimport {\r\n  Card,\r\n  Form,\r\n  Icon,\r\n  Input,\r\n  Button,\r\n  Cascader,\r\n  message,\r\n\r\n} from 'antd'\r\n\r\nimport RichTextEditor from './rich-text-editor'\r\nimport PicturesWall from './pictures-wall'\r\nimport LinkButton from '../../components/link-button'\r\nimport {reqCategorys,reqAddOrUpdateProduct} from '../../api'\r\nimport memoryUtils from '../../utils/memoryUtils'\r\n\r\n\r\nconst {Item} = Form\r\nconst {TextArea} = Input\r\n\r\n\r\nclass ProductAddUpdate extends PureComponent {\r\n\r\n\r\n  state = {\r\n    options:[]\r\n  }\r\n\r\n  constructor(props) {\r\n    super(props)\r\n    this.pw = React.createRef()\r\n    this.editor = React.createRef()\r\n\r\n  }\r\n    /* \r\n  异步获取一级/二级列表显示\r\n  */\r\n  getCategorys = async (parentId)=>{\r\n    const result = await  reqCategorys(parentId) //{status data}\r\n    if(result.status === 0){\r\n      const categorys  = result.data\r\n      //如果是一级分类列表\r\n      if(parentId === '0'){\r\n      this.initOptions(categorys)\r\n      }else{ //二级列表  当前async函数返回的promise就会成功且value为categorys\r\n        return categorys\r\n      }\r\n    }\r\n  }\r\n  initOptions = async (categorys)=>{\r\n    //根据categorys生产options数组 \r\n    const  options = categorys.map(c =>({\r\n      value: c._id,\r\n      label: c.name,\r\n      isLeaf: false, //不是叶子\r\n    }))\r\n\r\n    //如果是一个二级分类商品的更新\r\n    const {isUpdate,product} = this\r\n    const {pCategoryId} = product\r\n    if(isUpdate && pCategoryId !== '0'){\r\n      //生成对应得二级分类列表\r\n      const subCategorys = await this.getCategorys(pCategoryId)\r\n      const childOptions = subCategorys.map(c =>({\r\n        value: c._id,\r\n        label: c.name,\r\n        isLeaf: true,\r\n      }))\r\n      //找到当前商品对应得一级option对象\r\n      const targetOption = options.find(option => option.value === pCategoryId)\r\n      //关联到对应得一级option上\r\n      targetOption.children = childOptions\r\n    }\r\n    //更新options状态\r\n    this.setState({\r\n      options:options\r\n    })\r\n  }\r\n\r\n\r\n\r\n /* \r\n 用于加载下一级列表的回调函数\r\n */\r\n  loadData = async selectedOptions => {\r\n    // 得到选择的option对象\r\n    const targetOption = selectedOptions[selectedOptions.length - 1];\r\n    //显示loading\r\n    targetOption.loading = true;\r\n\r\n    //根据选中的分类 请求二级分类列表\r\n    const subCategory = await this.getCategorys(targetOption.value)\r\n    //隐藏loading\r\n    targetOption.loading = false;\r\n\r\n    if(subCategory && subCategory.length>0){\r\n      const childOptions =  subCategory.map(c =>({\r\n        value: c._id,\r\n        label: c.name,\r\n        isLeaf: true,\r\n      }))\r\n      //关联到当前options上\r\n      targetOption.children = childOptions\r\n    }else{  //当前选中的分类没有二级分类\r\n      targetOption.isLeaf = true\r\n    }\r\n\r\n    //更新options状态\r\n    this.setState({\r\n      options: [...this.state.options],\r\n      // options: this.state.options,\r\n    })\r\n  }\r\n\r\n\r\n  /*\r\n    对商品价格进行自定义验证\r\n  */\r\n validatePrice = (rule, value, callback)=>{\r\n   value = value * 1\r\n   if(value > 0){\r\n     callback()\r\n   }else{\r\n     callback('价格是必须大于0的数值')\r\n   }\r\n }\r\n\r\n\r\n /* \r\n 提交\r\n */\r\n submit = ()=>{\r\n      //进行表单验证 通过了才发送请求\r\n  this.props.form.validateFields( async (err,values)=>{\r\n    if(!err){\r\n      //1.收集数据 并封装成product对象\r\n      const imgs = this.pw.current.getImgs()\r\n      const detail = this.editor.current.getDetail()\r\n      const {name,desc,price,categoryIds} =  values\r\n      let pCategoryId,categoryId\r\n      if(categoryIds.length === 1){\r\n        pCategoryId = '0'\r\n        categoryId = categoryIds[0]\r\n      }else{\r\n        pCategoryId = categoryIds[0]\r\n        categoryId = categoryIds[1]\r\n      }\r\n      const product = {name,desc,price,pCategoryId,categoryId,imgs,detail}\r\n      //如果是更新 添加_id\r\n      if(this.isUpdate){\r\n        product._id = this.product._id\r\n      }\r\n      //2.调用接口请求函数去添加/更新\r\n      const result = await reqAddOrUpdateProduct(product)  \r\n\r\n      //3.根据页面结果显示\r\n      if(result.status === 0){\r\n        message.success(`${this.isUpdate ? '更新' : '修改'}商品成功`)\r\n        this.props.history.goBack()\r\n      }else{\r\n        message.error(`${this.isUpdate ? '更新' : '修改'}商品失败`)\r\n      }\r\n\r\n      /* //1.收集数据 并封装成product对象\r\n      const {name,desc,price,categoryIds} = values\r\n      const imgs = this.pw.current.getImgs()\r\n      const detail = this.editor.current.getDetail()\r\n      let pCategoryId,categoryId\r\n      if(categoryIds.length === 1){\r\n        pCategoryId = '0'\r\n        categoryId =   categoryIds[0]\r\n      }else{\r\n        pCategoryId = categoryIds[0]\r\n        categoryId =   categoryIds[1]\r\n      }\r\n      const product = {name,desc,price,pCategoryId,categoryId,imgs,detail}\r\n      //如果是更新 添加_id\r\n      if(this.isUpdate){\r\n        product._id = this.product._id\r\n      }\r\n      //2.调用接口请求函数去添加/更新\r\n      const result = await reqAddOrUpdateProduct(product)\r\n      //3.根据页面结果显示\r\n      if(result.status === 0){\r\n        message.success(`${this.isUpdate ? \"更新\": \"添加\"}商品成功`)\r\n        this.props.history.goBack()\r\n      }else{\r\n        message.error(`${this.isUpdate ? \"更新\": \"添加\"}商品失败`)\r\n      }\r\n       */\r\n\r\n      \r\n      console.log('submit()提交的数据 ',values+'values.desc',values.desc+'values.name',values.name+'values.price',values.price+'values.categoryIds',values.categoryIds+'imgs',imgs+'detail',detail)\r\n\r\n\r\n    }\r\n    \r\n  })\r\n }\r\n\r\n componentDidMount(){\r\n   this.getCategorys('0')\r\n }\r\n\r\n UNSAFE_componentWillMount (){\r\n   //取出携带的state\r\n  //  const product = this.props.location.state  //如果是添加没值 否则有值\r\n   const product = memoryUtils.product  //如果是添加没值 否则有值\r\n   // 保存是否是更新的标识\r\n   this.isUpdate = !! product._id\r\n   //保存商品（如果没有 保存的是{}）\r\n   this.product = product || {}\r\n\r\n }\r\n\r\n /* \r\n 在 卸载之前清除保存的数据\r\n */\r\ncomponentWillUnmount () {\r\n  memoryUtils.product = {}\r\n}\r\n\r\n\r\n  render() {\r\n\r\n    const {isUpdate,product} = this\r\n    const {pCategoryId,categoryId,imgs,detail} = product\r\n    //用于接收级联分类ID的数组\r\n    const categoryIds = []\r\n    if(isUpdate){\r\n      //一级\r\n      if(pCategoryId === '0'){\r\n        categoryIds.push(categoryId)\r\n      }else{\r\n      //二级\r\n        categoryIds.push(pCategoryId)\r\n        categoryIds.push(categoryId)\r\n      }\r\n    }\r\n\r\n    const {getFieldDecorator } = this.props.form\r\n\r\n    const formItemLayout = {\r\n      labelCol: { span: 2 }, //左侧label的宽度\r\n      wrapperCol: { span: 8 },//右侧label的宽度\r\n    }\r\n\r\n    const title = (\r\n      <span>\r\n        <LinkButton onClick={() => this.props.history.goBack()}>\r\n          <Icon type = 'arrow-left' style={{fontSize:20}}  />\r\n        </LinkButton>\r\n        <span>{isUpdate ? '修改商品' : '添加商品'}</span>\r\n      </span>\r\n    )\r\n\r\n    return (\r\n      <Card title={title}>\r\n        <Form {...formItemLayout}>\r\n          <Item label= '商品名称'>\r\n            {\r\n              getFieldDecorator(\r\n               'name',\r\n               {\r\n                initialValue:product.name,\r\n                rules:[\r\n                  {required:true,message:'商品名称必须输入'}\r\n                ]\r\n               }\r\n              )(\r\n                <Input placeholder='请输入商品名称'/>\r\n              )\r\n            }\r\n          </Item>\r\n\r\n          <Item label= '商品描述'>\r\n            {\r\n                getFieldDecorator(\r\n                'desc',\r\n                {\r\n                  initialValue:product.desc,\r\n                  rules:[\r\n                    {required:true,message:'商品描述必须输入'}\r\n                  ]\r\n                }\r\n                )(\r\n                  <TextArea placeholder=\"请输入商品描述\" autosize={{ minRows: 2, maxRows: 8 }} />\r\n                )\r\n              }\r\n          </Item>\r\n\r\n          <Item label= '商品价格'>\r\n             {\r\n                getFieldDecorator(\r\n                'price',\r\n                {\r\n                  initialValue:product.price,\r\n                  rules:[\r\n                    {required:true,message:'商品价格必须输入'},\r\n                    {validator: this.validatePrice}\r\n                  ]\r\n                }\r\n                )(\r\n                  <Input type = 'number' placeholder=\"请输入商品价格\"  addonAfter=\"元\"/>\r\n                )\r\n              }\r\n          </Item>\r\n\r\n          <Item label= '商品分类'>\r\n             {\r\n                getFieldDecorator(\r\n                'categoryIds',\r\n                {\r\n                  initialValue:categoryIds,\r\n                  rules:[\r\n                    {required:true,message:'商品分类必须输入'},\r\n                  ]\r\n                }\r\n                )(\r\n                  <Cascader\r\n                    placeholder='请指定商品分类'\r\n                    options={this.state.options}\r\n                    loadData={this.loadData}\r\n                  />\r\n                )\r\n              }\r\n            \r\n          </Item>\r\n\r\n          <Item label= '商品图片'>\r\n            <PicturesWall  ref={this.pw} imgs={imgs}/>\r\n          </Item>\r\n\r\n          <Item label= '商品详情'  labelCol= {{ span: 2 }} wrapperCol={{span : 20}}>\r\n            {/* labelCol: { span: 2 }, //左侧label的宽度\r\n               wrapperCol: { span: 8 },//右侧label的宽度 */}\r\n            <RichTextEditor ref={this.editor}  detail={detail}/>\r\n          </Item> \r\n\r\n          <Item>\r\n            <Button type='primary' onClick={this.submit}>提交</Button>\r\n          </Item>\r\n\r\n\r\n        </Form>\r\n\r\n      </Card>\r\n      \r\n    )\r\n  }\r\n}\r\n\r\nexport default Form.create()(ProductAddUpdate)\r\n/* \r\n子组件调用父组件的方法：将父组件的方法以函数的形式传递给子组件，子组件就可以调用\r\n父组件调用子组件的方法：在父组件中通过ref得到子组件的标签对象（也就是组件对象），调用其方法\r\n*/","import React, { Component } from 'react'\r\nimport {Icon,List,Card} from 'antd'\r\nimport LinkButton from '../../components/link-button'\r\nimport {BASE_IMG_URL} from '../../utils/constants'\r\nimport {reqCategory} from '../../api/index'\r\nimport memoryUtils from '../../utils/memoryUtils'\r\nconst Item = List.Item\r\n\r\nexport default class ProductDetail extends Component {\r\n\r\n\r\n  state = {\r\n    cName1 :\"\", //一级分类名称\r\n    cName2 : \"\", //二级分类名称\r\n  }\r\n\r\n  async componentDidMount(){\r\n    //得到当前商品的分类ID\r\n    // const  {pCategoryId,categoryId} = this.props.location.state.product\r\n    const  {pCategoryId,categoryId} = memoryUtils.product\r\n    //一级分类下的商品\r\n    if(pCategoryId === '0'){\r\n      const result = await reqCategory(categoryId)\r\n      const cName1 = result.data.name\r\n      //修改状态\r\n      this.setState({cName1})\r\n    }else{\r\n    //二级分类下的商品\r\n    /* \r\n    const results = await Promise.all([reqCategory(pCategoryId), reqCategory(categoryId)])\r\n    const cName1 = results[0].data.name\r\n    const cName2 = results[1].data.name\r\n    */\r\n   const results = await Promise.all([reqCategory(pCategoryId),reqCategory(categoryId)])\r\n   const cName1 = results[0].data.name\r\n   const cName2 = results[1].data.name\r\n    \r\n    /* const result1 = await reqCategory(pCategoryId)\r\n    const result2 = await reqCategory(categoryId)\r\n    const cName1 = result1.data.name\r\n    const cName2 = result2.data.name */\r\n    this.setState({\r\n      cName1,\r\n      cName2\r\n    })    \r\n  }\r\n  }\r\n\r\n   /* \r\n 在 卸载之前清除保存的数据\r\n */\r\ncomponentWillUnmount () {\r\n  memoryUtils.product = {}\r\n}\r\n\r\n  render() {\r\n\r\n    //读取携带过来的state数据\r\n    // const {name,desc,price,detail,imgs} =  this.props.location.state.product\r\n    const {name,desc,price,detail,imgs} =  memoryUtils.product\r\n    const {cName1,cName2} = this.state\r\n\r\n\r\n    const title = (\r\n      <span>\r\n        <LinkButton>\r\n          <Icon \r\n            onClick={() => this.props.history.goBack()}\r\n            type='arrow-left' \r\n            style={{fontSize:20,marginRight:10}}/>\r\n        </LinkButton>\r\n        <span>商品详情</span>\r\n      </span>\r\n    )\r\n\r\n    return (\r\n      \r\n      <Card title={title} className='product-detail'>\r\n        <List>\r\n          <Item>\r\n            <span className='left'>商品名称：</span>\r\n            <span>{name}</span>\r\n          </Item>\r\n          <Item>\r\n            <span className='left'>商品描述：</span>\r\n            <span>{desc}</span>\r\n          </Item>\r\n          <Item>\r\n            <span className='left'>商品价格：</span>\r\n            <span>{price}</span>\r\n          </Item>\r\n          <Item>\r\n            <span className='left'>所属分类：</span>\r\n            {/* <span>{cName1}{cName2 ?  ' --> '+cName1 : \"\" }</span> */}\r\n            <span>{cName1} {cName2 ? ' --> '+cName2 : ''}</span>\r\n          </Item>\r\n          <Item>\r\n            <span className='left'>商品图片：</span>\r\n            <span>\r\n              {\r\n                imgs.map(img =>(\r\n                  <img \r\n                    key={img}\r\n                    className=\"product-img\"\r\n                    src={BASE_IMG_URL + img}\r\n                    alt=\"img\"\r\n                  />  \r\n                ))\r\n              }\r\n              \r\n                \r\n            </span>\r\n          </Item>\r\n          <Item>\r\n            <span className='left'>商品详情：</span>\r\n            <span dangerouslySetInnerHTML={{__html:detail}}></span>\r\n          </Item>\r\n          <Item></Item>\r\n        </List>\r\n      </Card>\r\n    )\r\n  }\r\n}\r\n","import React, { Component } from \"react\";\r\nimport { Card, Select, Input, Button, Icon, Table, message } from \"antd\";\r\nimport LinkButton from \"../../components/link-button\";\r\nimport {\r\n  reqProducts,\r\n  reqSearchProducts,\r\n  reqUpdateStatus,\r\n} from \"../../api/index\";\r\nimport { PAGE_SIZE } from \"../../utils/constants\";\r\nimport memoryUtils from \"../../utils/memoryUtils\";\r\n\r\nconst Option = Select.Option;\r\n\r\nexport default class ProductHome extends Component {\r\n  state = {\r\n    products: [], //商品数组\r\n    total: 0, //商品总数量\r\n    loading: false, //正在加载中\r\n    searchName: \"\", //搜索关键字\r\n    searchType: \"productName\", // 根据哪个字段搜索\r\n  };\r\n  /* \r\n   初始化table列的数组\r\n  */\r\n  initColumns = () => {\r\n    this.columns = [\r\n      {\r\n        title: \"商品名称\",\r\n        dataIndex: \"name\",\r\n      },\r\n      {\r\n        title: \"商品描述\",\r\n        dataIndex: \"desc\",\r\n      },\r\n      {\r\n        title: \"价格\",\r\n        dataIndex: \"price\",\r\n        //当前指定了对应的属性，传入的是对应的属性值\r\n        render: (price) => \"¥\" + price,\r\n      },\r\n      {\r\n        width: 100,\r\n        title: \"状态\",\r\n        // dataIndex: 'status',\r\n        render: (product) => {\r\n          const { status, _id } = product;\r\n          const newStatus = status === 1 ? 2 : 1;\r\n          return (\r\n            <span>\r\n              <Button\r\n                type=\"primary\"\r\n                onClick={() => this.updateStatus(_id, newStatus)}\r\n              >\r\n                {status === 1 ? \"下架\" : \"上架\"}\r\n              </Button>\r\n              <span>{status === 1 ? \"在售\" : \"已下架\"}</span>\r\n            </span>\r\n          );\r\n        },\r\n      },\r\n      {\r\n        width: 100,\r\n        title: \"操作\",\r\n        render: (product) => (\r\n          <span>\r\n            {/* 将product 对象使用state传递给目标路由组件 */}\r\n            {/* <LinkButton onClick ={() => this.props.history.push('/product/detail',{product})}>详情</LinkButton> */}\r\n            <LinkButton\r\n              onClick={() =>\r\n                /* this.props.history.push(\"/product/detail\", { product }) */\r\n                this.showDetail(product)\r\n              }\r\n            >\r\n              详情\r\n            </LinkButton>\r\n            <LinkButton\r\n              onClick={() => this.showUpdate(product)\r\n            }\r\n            >\r\n              修改\r\n            </LinkButton>\r\n          </span>\r\n        ),\r\n      },\r\n    ];\r\n  };\r\n\r\n  /* \r\n  显示商品详情页面\r\n  */\r\n  showDetail = (product)=>{\r\n    //缓存product对象 ===》  给detail组件使用\r\n    memoryUtils.product = product\r\n    this.props.history.push(\"/product/detail\")\r\n\r\n  }\r\n  /* \r\n  显示修改商品页面\r\n  */\r\n  showUpdate = (product)=>{\r\n    //缓存product对象 ===》  给detail组件使用\r\n    memoryUtils.product = product\r\n    this.props.history.push(\"/product/addupdate\")\r\n\r\n  }\r\n\r\n  /* \r\n   获取指定页码的列表数据显示\r\n   */\r\n  getProducts = async (pageNum) => {\r\n    this.pageNum = pageNum; //保存pageNum 让其他方法可以看见\r\n    this.setState({ loading: true });\r\n\r\n    const { searchName, searchType } = this.state;\r\n    //如果关键字有值 是搜索分页\r\n    let result;\r\n    if (searchName) {\r\n      result = await reqSearchProducts({\r\n        pageNum,\r\n        pageSize: PAGE_SIZE,\r\n        searchName,\r\n        searchType,\r\n      });\r\n    } else {\r\n      // 一般分页请求\r\n      result = await reqProducts(pageNum, PAGE_SIZE);\r\n    }\r\n    this.setState({ loading: false });\r\n    if (result.status === 0) {\r\n      //取出分页数据 更新动态 显示分页列表\r\n      const { total, list } = result.data;\r\n      this.setState({\r\n        total,\r\n        products: list,\r\n      });\r\n    }\r\n  };\r\n\r\n  /* \r\n  更新指定商品的状态\r\n  */\r\n  updateStatus = async (productId, status) => {\r\n    const result = await reqUpdateStatus(productId, status);\r\n    if (result.status === 0) {\r\n      message.success(\"商品状态更新成功\");\r\n      this.getProducts(this.pageNum);\r\n    }\r\n  };\r\n\r\n  UNSAFE_componentWillMount() {\r\n    this.initColumns();\r\n  }\r\n  componentDidMount() {\r\n    this.getProducts(1);\r\n  }\r\n  render() {\r\n    //取出状态数据\r\n    const { products, total, loading, searchName, searchType } = this.state;\r\n\r\n    const title = (\r\n      <span>\r\n        <Select\r\n          value={searchType}\r\n          style={{ width: 150 }}\r\n          onChange={(value) => this.setState({ searchType: value })}\r\n        >\r\n          <Option value=\"productName\">按名称搜索</Option>\r\n          <Option value=\"productDesc\">按描述搜索</Option>\r\n        </Select>\r\n        <Input\r\n          placeholder=\"关键字\"\r\n          style={{ width: 150, margin: \"0 15px\" }}\r\n          value={searchName}\r\n          onChange={(e) => this.setState({ searchName: e.target.value })}\r\n        />\r\n        <Button type=\"primary\" onClick={() => this.getProducts(1)}>\r\n          搜索\r\n        </Button>\r\n      </span>\r\n    );\r\n    const extra = (\r\n      <Button\r\n        type=\"primary\"\r\n        onClick={() => this.props.history.push(\"/product/addupdate\")}\r\n      >\r\n        <Icon type=\"plus\" />\r\n        添加商品\r\n      </Button>\r\n    );\r\n\r\n    return (\r\n      <Card title={title} extra={extra}>\r\n        <Table\r\n          loading={loading}\r\n          bordered\r\n          rowKey=\"_id\"\r\n          dataSource={products}\r\n          columns={this.columns}\r\n          pagination={{\r\n            current:this.pageNum,\r\n            total,\r\n            defaultPageSize: PAGE_SIZE,\r\n            showQuickJumper: true,\r\n            onChange: this.getProducts,\r\n          }}\r\n        />\r\n        ;\r\n      </Card>\r\n    );\r\n  }\r\n}\r\n","import React, { Component } from 'react'\r\nimport {Switch,Route,Redirect} from 'react-router-dom'\r\n\r\nimport ProductAddUpdate from './product-add-update'\r\nimport ProductDetail from './product-detail'\r\nimport ProductHome from './product-home'\r\n\r\nimport './product.less'\r\n\r\nexport default class Product extends Component {\r\n  render() {\r\n    return (\r\n      <Switch>\r\n        <Route path='/product' component={ProductHome} exact/>{/* 路径完全匹配 */}\r\n        <Route path='/product/addupdate' component={ProductAddUpdate}/>\r\n        <Route path='/product/detail' component={ProductDetail}/>\r\n        <Redirect to='/product'/>\r\n      </Switch>\r\n    )\r\n  }\r\n}\r\n","import React, { Component } from \"react\";\r\nimport { Form, Input } from \"antd\";\r\nimport PropTypes from \"prop-types\";\r\n\r\nconst Item = Form.Item;\r\n\r\nclass AddForm extends Component {\r\n  static propTypes = {\r\n    setForm : PropTypes.func.isRequired //  用来传递form对象的函数\r\n  }\r\n\r\n  UNSAFE_componentWillMount(){\r\n    this.props.setForm(this.props.form)\r\n  }\r\n\r\n  render() {\r\n    const { getFieldDecorator } = this.props.form;\r\n    const formItemLayout = {\r\n      labelCol: { span: 5}, //左侧label的宽度\r\n      wrapperCol: { span: 15 },//右侧label的宽度\r\n    }\r\n    return (\r\n      <Form {...formItemLayout}>\r\n        <Item label='角色名称'>\r\n          {getFieldDecorator(\"roleName\", {\r\n            initialValue: '',\r\n            rules: [\r\n              {\r\n                required:true,message:'角色名称必须输入'\r\n              }\r\n            ]\r\n          })(<Input placeholder=\"请输入角色名称\" />)}\r\n        </Item>\r\n      </Form>\r\n    )\r\n  }\r\n}\r\nexport default Form.create()(AddForm);\r\n","import React, { PureComponent } from \"react\";\r\nimport { Form,Input,Tree } from \"antd\";\r\nimport PropTypes from \"prop-types\";\r\n\r\nimport menuConfig from '../../config/menuConfig'\r\n\r\nconst Item = Form.Item\r\nconst { TreeNode } = Tree\r\n\r\n\r\nexport default class AuthForm extends PureComponent {\r\n  static propTypes = {\r\n    role:PropTypes.object\r\n  }\r\n\r\n  constructor(props){\r\n    super(props)\r\n    //根据传入的menu生成初始状态\r\n    const {menus}  = this.props.role\r\n    this.state = {\r\n      checkedKeys:menus\r\n    }\r\n\r\n  }\r\n\r\n  getTreeNodes = (menuConfig) => {\r\n    return menuConfig.reduce((pre, item) => {\r\n      pre.push(\r\n        <TreeNode title={item.title} key={item.key}>\r\n          {item.children ? this.getTreeNodes(item.children) : null}\r\n        </TreeNode>\r\n      )\r\n      return pre\r\n    }, [])\r\n  }\r\n\r\n  //为父组件提供获取最新menus的方法\r\n  getMenus = ()=>{\r\n    return this.state.checkedKeys\r\n  }\r\n\r\n  //选中某个node时\r\n  onCheck = checkedKeys => {\r\n    console.log('onCheck', checkedKeys);\r\n    this.setState({ checkedKeys });\r\n  }\r\n\r\n  UNSAFE_componentWillMount(){\r\n    this.treeNodes = this.getTreeNodes(menuConfig)\r\n  }\r\n\r\n  //根据新传入的role来更新checkedKey状态\r\n  //当组件接收到新的属性时自动调用\r\n  UNSAFE_componentWillReceiveProps(nextProps){\r\n    console.log('UNSAFE_componentWillReceiveProps',nextProps)\r\n    const menus = nextProps.role.menus\r\n    this.setState({\r\n      checkedKeys:menus\r\n    })\r\n  }\r\n\r\n  render() {\r\n    console.log('render() authform')\r\n\r\n\r\n    const {role} = this.props\r\n    const {checkedKeys} = this.state\r\n    const formItemLayout = {\r\n      labelCol: { span: 5}, //左侧label的宽度\r\n      wrapperCol: { span: 15 },//右侧label的宽度\r\n    }\r\n    return (\r\n      <div>\r\n        <Item label='角色名称' {...formItemLayout}>\r\n        <Input  value={role.name} disabled   />\r\n        </Item>\r\n\r\n        <Tree\r\n          checkable\r\n          defaultExpandAll={true}\r\n          checkedKeys={checkedKeys}\r\n          onCheck={this.onCheck}\r\n        >\r\n        <TreeNode title=\"平台权限\" key=\"all\">\r\n          {\r\n            this.treeNodes\r\n          }\r\n        </TreeNode>\r\n      </Tree>\r\n      </div>\r\n        \r\n    )\r\n  }\r\n}\r\n","import React, { Component } from 'react'\r\nimport {\r\n  Card,\r\n  Table,\r\n  Button,\r\n  Modal,\r\n  message\r\n}from 'antd'\r\nimport {reqRoles,reqAddRole,reqUpdateRole} from '../../api'\r\nimport AddForm from './add-form'\r\nimport AuthForm from './auth-form'\r\nimport {formateDate} from '../../utils/dateUtils'\r\nimport {connect} from 'react-redux'\r\nimport {logout} from '../../redux/actions'\r\n\r\n class Role extends Component {\r\n\r\n  constructor(props){\r\n    super(props)\r\n    this.auth = React.createRef()\r\n\r\n\r\n\r\n  }\r\n\r\n  state = {\r\n    roles : [], // 所有角色列表\r\n    role : {}, //选中的角色\r\n    isShowAdd:false, //是否显示添加界面\r\n    isShowAuth:false, //是否显示设置角色权限\r\n  }\r\n\r\n  OnRow = (role)=>{\r\n    return {\r\n      onClick: event => {\r\n        console.log('role onClick',role)\r\n        this.setState({\r\n          role\r\n        })\r\n      }, // 点击行\r\n    }\r\n  }\r\n   /* \r\n   初始化列表\r\n   */\r\n  initColumn = ()=>{\r\n    this.columns = [\r\n      {\r\n        title: '角色名称',\r\n        dataIndex: 'name'\r\n      },\r\n      {\r\n        title: '创建时间',\r\n        dataIndex: 'create_time',\r\n        render : (create_time) =>formateDate(create_time)\r\n\r\n        }\r\n      ,\r\n      {\r\n        title: '授权时间',\r\n        dataIndex: 'auth_time',\r\n        render : formateDate\r\n\r\n      },\r\n      {\r\n        title: '授权人',\r\n        dataIndex: 'auth_name'\r\n      },\r\n    ]\r\n  }\r\n\r\n  //获取所有角色列表\r\n  getRoles = async ()=>{\r\n    const result  = await reqRoles()\r\n    if(result.status === 0){\r\n      const roles = result.data\r\n      this.setState({\r\n        roles\r\n      })\r\n\r\n    }\r\n  }\r\n\r\n  \r\n\r\n  /* \r\n  添加角色\r\n  */\r\n  addRole = ()=>{\r\n    //进行表单验证\r\n    this.form.validateFields( async (err, values) => {\r\n      if (!err) {\r\n        //隐藏确认框\r\n        this.setState({\r\n          isShowAdd:false\r\n        })\r\n       //收集数据\r\n       const {roleName}  = values\r\n       //清除输入框\r\n       this.form.resetFields()\r\n       //调用接口请求添加\r\n       const result = await reqAddRole(roleName)\r\n       if(result.status === 0){\r\n         message.success('角色添加成功')\r\n        //更新roles状态\r\n        //1.重新获取所有的角色\r\n         //this.getRoles()\r\n        //2. 把新角色塞到角色数组里：\r\n        // const role = result.data\r\n        // const roles =  this.state.roles\r\n        // roles.push(role)\r\n        // this.setState({\r\n        //   roles\r\n        // }) \r\n        // 3.更新 roles 状态: 基于原本状态数据更新\r\n        const role = result.data\r\n        this.setState(state =>({\r\n          roles:[...state.roles,role]\r\n        }))\r\n       }else{\r\n         message.error('角色添加失败')\r\n       }\r\n      }\r\n    })\r\n\r\n  }\r\n  /* \r\n  更新角色\r\n   */\r\n  updateRole  = async ()=>{\r\n\r\n    //隐藏确认框\r\n    this.setState({\r\n      isShowAuth:false\r\n    })\r\n\r\n    const role = this.state.role\r\n    //得到最新的menus\r\n    const menus =  this.auth.current.getMenus()\r\n    role.menus = menus\r\n    role.auth_name = this.props.user.username\r\n    role.auth_time = Date.now()\r\n    //请求更新\r\n    const  result = await reqUpdateRole(role)\r\n    if(result.status === 0){\r\n      // this.getRoles()\r\n      //如果当前更新的是自己角色的权限 强制退出\r\n      if(role._id === this.props.user.role_id){\r\n        this.props.logout()\r\n        message.warning('当前角色权限已经修改，请重新登录')\r\n      }else{\r\n        message.success('设置角色权限成功')\r\n        this.setState({\r\n          roles:[...this.state.roles]\r\n        })\r\n      }\r\n      \r\n    }\r\n  }\r\n\r\n  UNSAFE_componentWillMount(){\r\n    this.initColumn()\r\n  }\r\n\r\n  componentDidMount(){\r\n    this.getRoles()\r\n  }\r\n  render() {\r\n\r\n    const {roles,role,isShowAdd,isShowAuth} = this.state \r\n\r\n    const title =(\r\n      <span>\r\n        <Button type='primary' onClick={()=>this.setState({isShowAdd:true})}>创建角色</Button>\r\n        &nbsp;&nbsp;\r\n        <Button type='primary' disabled={!role._id} onClick={()=>this.setState({isShowAuth:true})}>设置创建角色</Button>\r\n      </span>\r\n    )\r\n    return (\r\n      <Card title = {title}>\r\n        <Table\r\n          dataSource={roles}\r\n          columns={this.columns}\r\n          bordered\r\n          rowKey=\"_id\"\r\n          pagination={{ defaultPageSize: 2, showQuickJumper: true }}\r\n          rowSelection={{\r\n            type:'radio',\r\n            selectedRowKeys:[role._id],\r\n            onSelect : (role)=>{\r\n              this.setState({\r\n                role\r\n              })\r\n            }\r\n          }}\r\n          onRow = {this.OnRow}\r\n        />\r\n\r\n      <Modal\r\n          title=\"添加角色\"\r\n          visible={isShowAdd}\r\n          onOk={this.addRole}\r\n          onCancel={() =>{\r\n            this.setState({\r\n              isShowAdd : false\r\n            })\r\n          } }\r\n        >\r\n          <AddForm\r\n            setForm={(form) => {\r\n              this.form = form;\r\n            }}\r\n          />\r\n        </Modal>\r\n\r\n        <Modal\r\n          title=\"设置角色权限\"\r\n          visible={isShowAuth}\r\n          onOk={this.updateRole}\r\n          onCancel={() =>{\r\n            this.setState({\r\n              isShowAuth : false\r\n            })\r\n          } }\r\n        >\r\n          <AuthForm role={role} ref={this.auth } />\r\n        </Modal>\r\n\r\n      </Card>\r\n    )\r\n  }\r\n}\r\nexport default connect(\r\n  state => ({user:state.user}),\r\n  {\r\n    logout\r\n  }\r\n)(Role)\r\n","import React, { Component } from 'react'\r\nimport PropTypes from 'prop-types'\r\nimport {\r\n  Form,\r\n  Select,\r\n  Input\r\n} from 'antd'\r\n\r\nconst Item = Form.Item\r\nconst Option = Select.Option\r\n\r\n\r\n\r\n\r\nclass UserForm extends Component {\r\n\r\n\r\n  static propTypes = {\r\n    setForm: PropTypes.func.isRequired, // 用来传递form对象的函数\r\n    roles: PropTypes.array.isRequired, //  角色数组\r\n    user: PropTypes.object\r\n  }\r\n\r\n  UNSAFE_componentWillMount(){\r\n    this.props.setForm(this.props.form)\r\n  }\r\n\r\n  //自定义校验密码\r\n  validatePwd = (rule, value, callback)=>{\r\n     if(value.length<4){\r\n     callback('密码必须不能小于4位')\r\n    }else if(value.length>12){\r\n     callback('密码必须不能大于12位')\r\n    }else if(!/^[a-zA-Z0-9_]+$/.test(value)){\r\n     callback('密码必须为英文、数字或下划线组成')\r\n    }else{\r\n      callback()\r\n    }\r\n   }\r\n   //自定义校验手机号\r\n   validatePhone = (rule, value, callback)=>{\r\n     if(!/^1[3-9][0-9]{9}$/.test(value)){\r\n      callback('手机号不符合规范')\r\n     }else{\r\n       callback()\r\n     }\r\n   }\r\n   //自定义校验邮箱\r\n   validateEmail = (rule, value, callback)=>{\r\n     if(!/^[A-Za-z0-9._%-]+@([A-Za-z0-9-]+\\.)+[A-Za-z]{2,4}$/.test(value)){\r\n      callback('邮箱不符合规范')\r\n     }else{\r\n       callback()\r\n     }\r\n   }\r\n\r\n  render() {\r\n\r\n    const {roles,user} = this.props\r\n    const { getFieldDecorator } = this.props.form\r\n    // 指定Item布局的配置对象\r\n    const formItemLayout = {\r\n      labelCol: { span: 4 },  // 左侧label的宽度\r\n      wrapperCol: { span: 15 }, // 右侧包裹的宽度\r\n    }\r\n\r\n    return (\r\n      <Form {...formItemLayout}>\r\n        <Item label='用户名'>\r\n          {\r\n            getFieldDecorator('username', {\r\n              //声明式验证\r\n              rules: [\r\n                { required: true,whitespace:true, message: '用户名必须输入' },\r\n                {min:4,message:'用户名必须大于4位'},\r\n                {max:12,message:'用户名必须小于12位'},\r\n                {pattern:/^[a-zA-Z0-9_]+$/,message:'用户名必须为英文、数字或下划线组成'}\r\n              \r\n              ],\r\n              initialValue: user.username,\r\n            })(\r\n              <Input \r\n                placeholder='请输入用户名'\r\n                autoComplete=\"off\"  //取消默认的input历史记录\r\n                />\r\n            )\r\n          }\r\n        </Item>\r\n\r\n\r\n        {\r\n          user._id ? null : (\r\n            <Item label='密码'>\r\n              {\r\n                getFieldDecorator('password', {\r\n                  rules:[\r\n                    { required: true,whitespace:true,message: '密码必须输入' },\r\n                    {validator:this.validatePwd}\r\n                  ],\r\n                  initialValue: user.password,\r\n                })(\r\n                  <Input type='password' placeholder='请输入密码'/>\r\n                )\r\n              }\r\n              </Item>\r\n          )\r\n        }\r\n\r\n        \r\n        <Item label='手机号'>\r\n          {\r\n            getFieldDecorator('phone', {\r\n              rules:[\r\n                { required: true,whitespace:true,message: '手机号必须输入'  },\r\n                {validator:this.validatePhone}\r\n              ],\r\n              initialValue: user.phone,\r\n            })(\r\n              <Input placeholder='请输入手机号' autoComplete=\"off\" />\r\n            )\r\n          }\r\n        </Item>\r\n        <Item label='邮箱'>\r\n          {\r\n            getFieldDecorator('email', {\r\n              rules:[\r\n                { required: true,whitespace:true,message: '邮箱必须输入'  },\r\n                {validator:this.validateEmail}\r\n              ],\r\n              initialValue: user.email,\r\n            })(\r\n              <Input placeholder='请输入邮箱' autoComplete=\"off\"/>\r\n            )\r\n          }\r\n        </Item>\r\n        <Item label='角色'>\r\n          {\r\n            getFieldDecorator('role_id', {\r\n              rules: [\r\n                { required: true, message: '角色类型必须选择' },\r\n              ],\r\n              initialValue: user.role_id,\r\n            })(\r\n              <Select>\r\n                {\r\n                  roles.map(role => <Option key={role._id} value={role._id}>{role.name}</Option>\r\n                  )\r\n                }\r\n              </Select>\r\n            )\r\n          }\r\n        </Item>\r\n      </Form>\r\n    )\r\n  }\r\n}\r\nexport default Form.create()(UserForm)\r\n","import React, { Component } from 'react'\r\nimport {\r\n  Card,\r\n  Modal,\r\n  Button,\r\n  Table,\r\n  message\r\n} from 'antd'\r\nimport {reqUsers,reqDeleteUser,reqAddOrUpdateUser} from '../../api/index'\r\nimport LinkButton from '../../components/link-button'\r\nimport { formateDate } from '../../utils/dateUtils'\r\nimport UserForm from './user-form'\r\n\r\nconst { confirm } = Modal;\r\n\r\n/* \r\n用户路由\r\n*/\r\nexport default class User extends Component {\r\n\r\n  state = {\r\n    isShow:false, // 是否显示确认框\r\n    users:[],//所有用户列表\r\n    roles:[] //所有角色列表\r\n  }\r\n\r\n\r\n  //初始化列\r\n  initColumns = ()=>{\r\n    this.columns = [\r\n      {\r\n        title:'用户名',\r\n        dataIndex:'username'\r\n      },\r\n      {\r\n        title:'邮箱',\r\n        dataIndex:'email'\r\n      },\r\n      {\r\n        title:'电话',\r\n        dataIndex:'phone'\r\n      },\r\n      {\r\n        title:'注册时间',\r\n        dataIndex:'create_time',\r\n        render:formateDate\r\n      },\r\n      {\r\n        title:'所属角色',\r\n        dataIndex:'role_id',\r\n        // render: (role_id) => this.state.roles.find(role => role._id === role_id).name \r\n        render : (role_id)=> this.roleNames[role_id]\r\n      },\r\n      {\r\n        title: '操作',\r\n        render: (user) => (\r\n          <span>\r\n            <LinkButton onClick = {() => this.showUpdate(user)}>修改</LinkButton>\r\n            <LinkButton onClick={()=> this.deleteUser(user)}>删除</LinkButton>\r\n          </span>\r\n        )\r\n      },\r\n      \r\n    ]\r\n  }\r\n  /* \r\n  根据role的数组, 生成包含所有角色名的对象(属性名用角色id值)\r\n  */\r\n  initRoleNames = (roles)=>{\r\n    const roleNames = roles.reduce((pre, role) => {\r\n      pre[role._id] = role.name\r\n      return pre\r\n    }, {})\r\n    // 保存\r\n    this.roleNames = roleNames\r\n  }\r\n\r\n  //获取用户\r\n  getUsers = async ()=>{\r\n    const result = await reqUsers()\r\n    if(result.status === 0){\r\n      const {users,roles} = result.data\r\n      this.initRoleNames(roles)\r\n      this.setState({\r\n        users,\r\n        roles\r\n      })\r\n    }\r\n  }\r\n  //删除用户\r\n  deleteUser = (user)=>{\r\n    console.log('user',user)\r\n    confirm({\r\n      title: `你想要删除${user.username}吗？`,\r\n      onOk: async () =>{\r\n         const result = await reqDeleteUser(user._id)\r\n         if(result.status === 0){\r\n          message.success(`删除用户${user.username}成功！`)\r\n          this.getUsers()\r\n         }else{\r\n           message.error(`删除用户失败！`)\r\n         }\r\n      },\r\n       \r\n    });\r\n  }\r\n  /* \r\n    添加/更新用户\r\n  */\r\n addOrUpdateUser =   ()=>{\r\n\r\n  this.form.validateFields(async (err, values) => {\r\n      if(!err){\r\n        console.log('Received values of form: ', values)\r\n\r\n        this.setState({isShow:false})\r\n        //收集输入数据\r\n        const user = this.form.getFieldsValue()\r\n        this.form.resetFields()\r\n\r\n        //如果是更新 需要给user指定_id属性\r\n        if(this.user){\r\n          user._id = this.user._id\r\n        }\r\n\r\n        //提交添加的请求\r\n        const result = await reqAddOrUpdateUser(user)\r\n        //更新列表显示\r\n        if(result.status === 0){\r\n          message.success(`${this.user ? '修改' : '添加'}用户成功！`)\r\n          this.getUsers()\r\n        } \r\n      }\r\n  })\r\n }\r\n/* \r\n 显示修改界面\r\n*/\r\nshowUpdate = (user)=>{\r\n  this.user = user //保存user\r\n  this.setState({\r\n    isShow:true\r\n  })\r\n}\r\n  /* \r\n  显示添加界面\r\n*/\r\nshowAdd = ()=>{\r\n  this.user = null\r\n  this.setState({isShow:true})\r\n}\r\n\r\n\r\n\r\n  UNSAFE_componentWillMount (){\r\n    this.initColumns()\r\n  }\r\n\r\n  componentDidMount(){\r\n    this.getUsers()\r\n  }\r\n\r\n  render() {\r\n    const {isShow,users,roles} = this.state\r\n    const user = this.user  || {}\r\n\r\n    const  title =  (\r\n      <Button type = 'primary' onClick= {this.showAdd} >创建用户</Button>\r\n    )\r\n    \r\n    return (\r\n      <Card title={title}>\r\n        <Table\r\n          dataSource={users}\r\n          columns={this.columns}\r\n          bordered\r\n          rowKey=\"_id\"\r\n          pagination={{ defaultPageSize: 2}}\r\n        />\r\n        <Modal\r\n          title={user._id ? '修改用户' : '添加用户'}\r\n          visible={isShow}\r\n          onOk={this.addOrUpdateUser}\r\n          onCancel={()=>{\r\n            this.form.resetFields()\r\n            this.setState({isShow : false})\r\n          }}\r\n        >\r\n          <UserForm \r\n            setForm={form => this.form = form}\r\n            roles = {roles}\r\n            user = {user}\r\n          /> \r\n        </Modal>\r\n      </Card>\r\n    )\r\n  }\r\n}\r\n","import React, { Component } from 'react'\r\nimport {Card,Button}  from 'antd'\r\nimport ReactEcharts from 'echarts-for-react'\r\n\r\n/* \r\n柱状图\r\n*/\r\nexport default class Bar extends Component {\r\n\r\n  state = {\r\n    sales: [5, 20, 36, 10, 10, 20], // 销量的数组\r\n    stores: [6, 10, 25, 20, 15, 10], // 库存的数组\r\n  }\r\n\r\n\r\n  //点击更新\r\n  update = ()=>{\r\n    this.setState(state => ({\r\n      sales:state.sales.map(sale => sale+1),\r\n      stores:state.stores.reduce((pre,store) => {\r\n        pre.push(store-1)\r\n        return pre\r\n      },[])\r\n\r\n    }))\r\n\r\n  }\r\n\r\n  getOption = (sales,stores)=>{\r\n    return {\r\n      title: {\r\n        text: 'ECharts 入门示例'\r\n      },\r\n      tooltip: {},\r\n      legend: {\r\n        data: ['销量','库存']\r\n      },\r\n      xAxis: {\r\n        data: ['衬衫', '羊毛衫', '雪纺衫', '裤子', '高跟鞋', '袜子']\r\n      },\r\n      yAxis: {},\r\n      series: [\r\n        {\r\n          name: '销量',\r\n          type: 'bar',\r\n          data: sales\r\n        },\r\n        {\r\n          name: '库存',\r\n          type: 'bar',\r\n          data: stores\r\n        }\r\n      ]\r\n    }\r\n  }\r\n  \r\n\r\n  render() {\r\n    const {sales, stores} = this.state\r\n    return (\r\n      <div>\r\n        <Card>\r\n          <Button type='primary' onClick = {this.update}>更新</Button>\r\n        </Card>\r\n\r\n        <Card title='柱状图一'>\r\n        <ReactEcharts option = {this.getOption(sales,stores)}/>\r\n        </Card>\r\n      </div>\r\n    )\r\n  }\r\n}\r\n","import React, { Component } from 'react'\r\nimport {Card,Button}  from 'antd'\r\nimport ReactEcharts from 'echarts-for-react'\r\n\r\n/* \r\n折线图\r\n*/\r\nexport default class Bar extends Component {\r\n\r\n  state = {\r\n    sales: [5, 20, 36, 10, 10, 20], // 销量的数组\r\n    stores: [6, 10, 25, 20, 15, 10], // 库存的数组\r\n  }\r\n\r\n\r\n  //点击更新\r\n  update = ()=>{\r\n    this.setState(state => ({\r\n      sales:state.sales.map(sale => sale+1),\r\n      stores:state.stores.reduce((pre,store) => {\r\n        pre.push(store-1)\r\n        return pre\r\n      },[])\r\n\r\n    }))\r\n\r\n  }\r\n\r\n  getOption = (sales,stores)=>{\r\n    return {\r\n      title: {\r\n        text: 'ECharts 入门示例'\r\n      },\r\n      tooltip: {},\r\n      legend: {\r\n        data: ['销量','库存']\r\n      },\r\n      xAxis: {\r\n        data: ['衬衫', '羊毛衫', '雪纺衫', '裤子', '高跟鞋', '袜子']\r\n      },\r\n      yAxis: {},\r\n      series: [\r\n        {\r\n          name: '销量',\r\n          type: 'line',\r\n          data: sales\r\n        },\r\n        {\r\n          name: '库存',\r\n          type: 'line',\r\n          data: stores\r\n        }\r\n      ]\r\n    }\r\n  }\r\n  \r\n\r\n  render() {\r\n    const {sales, stores} = this.state\r\n    return (\r\n      <div>\r\n        <Card>\r\n          <Button type='primary' onClick = {this.update}>更新</Button>\r\n        </Card>\r\n\r\n        <Card title='折线图一'>\r\n        <ReactEcharts option = {this.getOption(sales,stores)}/>\r\n        </Card>\r\n      </div>\r\n    )\r\n  }\r\n}\r\n","import React, { Component } from \"react\";\r\nimport { Card } from \"antd\";\r\nimport ReactEcharts from \"echarts-for-react\";\r\n\r\nexport default class Pie extends Component {\r\n\r\n  getOption = () => {\r\n    return {\r\n      title : {\r\n        text: '某站点用户访问来源',\r\n        subtext: '纯属虚构',\r\n        x:'center'\r\n      },\r\n      tooltip : {\r\n        trigger: 'item',\r\n        formatter: \"{a} <br/>{b} : {c} ({d}%)\"\r\n      },\r\n      legend: {\r\n        orient: 'vertical',\r\n        left: 'left',\r\n        data: ['直接访问','邮件营销','联盟广告','视频广告','搜索引擎']\r\n      },\r\n      series : [\r\n        {\r\n          name: '访问来源',\r\n          type: 'pie',\r\n          radius : '55%',\r\n          center: ['50%', '60%'],\r\n          data:[\r\n            {value:335, name:'直接访问'},\r\n            {value:310, name:'邮件营销'},\r\n            {value:234, name:'联盟广告'},\r\n            {value:135, name:'视频广告'},\r\n            {value:1548, name:'搜索引擎'}\r\n          ],\r\n          itemStyle: {\r\n            emphasis: {\r\n              shadowBlur: 10,\r\n              shadowOffsetX: 0,\r\n              shadowColor: 'rgba(0, 0, 0, 0.5)'\r\n            }\r\n          }\r\n        }\r\n      ]\r\n    };\r\n\r\n  }\r\n\r\n  getOption2 = () => {\r\n    return {\r\n      backgroundColor: \"#2c343c\",\r\n      title: {\r\n        text: \"Customized Pie\",\r\n        left: \"center\",\r\n        top: 20,\r\n        textStyle: {\r\n          color: \"#ccc\",\r\n        },\r\n      },\r\n      tooltip: {\r\n        trigger: \"item\",\r\n      },\r\n      visualMap: {\r\n        show: false,\r\n        min: 80,\r\n        max: 600,\r\n        inRange: {\r\n          colorLightness: [0, 1],\r\n        },\r\n      },\r\n      series: [\r\n        {\r\n          name: \"访问来源\",\r\n          type: \"pie\",\r\n          radius: \"55%\",\r\n          center: [\"50%\", \"50%\"],\r\n          data: [\r\n            {value:335, name:'直接访问'},\r\n            {value:310, name:'邮件营销'},\r\n            {value:274, name:'联盟广告'},\r\n            {value:235, name:'视频广告'},\r\n            {value:400, name:'搜索引擎'}\r\n          ].sort(function (a, b) {\r\n            return a.value - b.value;\r\n          }),\r\n          roseType: \"radius\",\r\n          label: {\r\n            color: \"rgba(255, 255, 255, 0.3)\",\r\n          },\r\n          labelLine: {\r\n            lineStyle: {\r\n              color: \"rgba(255, 255, 255, 0.3)\",\r\n            },\r\n            smooth: 0.2,\r\n            length: 10,\r\n            length2: 20,\r\n          },\r\n          itemStyle: {\r\n            color: \"#c23531\",\r\n            shadowBlur: 200,\r\n            shadowColor: \"rgba(0, 0, 0, 0.5)\",\r\n          },\r\n          animationType: \"scale\",\r\n          animationEasing: \"elasticOut\",\r\n          animationDelay: function (idx) {\r\n            return Math.random() * 200;\r\n          },\r\n        },\r\n      ],\r\n    };\r\n  };\r\n  render() {\r\n    return (\r\n      <div>\r\n        <Card title=\"饼状图一\">\r\n          <ReactEcharts option={this.getOption()} style={{ height: 300 }} />\r\n        </Card>\r\n        <Card title=\"饼状图二\">\r\n          <ReactEcharts option={this.getOption2()} style={{ height: 300 }} />\r\n        </Card>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n","import React, { Component } from 'react'\r\nimport './order.less'\r\n\r\nexport default class Order extends Component {\r\n  render() {\r\n    return (\r\n      <div className='order'>\r\n        订单管理模块学生实战开发中...\r\n      </div>\r\n    )\r\n  }\r\n}\r\n","import React, {Component} from 'react'\r\nimport {Button, Row, Col} from 'antd'\r\nimport {connect} from 'react-redux'\r\n\r\nimport {setHeadTitle} from '../../redux/actions'\r\nimport './not-found.less'\r\n\r\n/*\r\n前台404页面\r\n */\r\nclass NotFound extends Component {\r\n\r\n  goHome = () => {\r\n    this.props.setHeadTitle('首页')\r\n    this.props.history.replace('/home')\r\n  }\r\n\r\n  render() {\r\n    return (\r\n\r\n      <Row className='not-found'>\r\n        <Col span={12} className='left'></Col>\r\n        <Col span={12} className='right'>\r\n          <h1>404</h1>\r\n          <h2>抱歉，你访问的页面不存在</h2>\r\n          <div>\r\n            <Button type='primary' onClick={this.goHome}>\r\n              回到首页\r\n            </Button>\r\n          </div>\r\n        </Col>\r\n      </Row>\r\n    )\r\n  }\r\n}\r\n\r\nexport default connect(\r\n  null,\r\n  {setHeadTitle}\r\n)(NotFound)","import React, { Component } from \"react\";\r\nimport { Redirect , Route , Switch} from \"react-router-dom\";\r\nimport { Layout } from \"antd\";\r\n\r\nimport Header from '../../components/header'\r\nimport LeftNav from '../../components/left-nav'\r\n\r\nimport Home from '../home/home'\r\nimport Category from '../category/category'\r\nimport Product from '../product/product'\r\nimport Role from '../role/role'\r\nimport User from '../user/user'\r\nimport Bar from '../charts/bar'\r\nimport Line from '../charts/line'\r\nimport Pie from '../charts/pie'\r\nimport Order from '../order/order'\r\nimport {connect} from 'react-redux'\r\nimport NotFound from \"../not-found/not-found\";\r\n\r\n\r\nconst {  Footer, Sider, Content } = Layout;\r\n\r\n class Admin extends Component {\r\n  render() {\r\n    const user = this.props.user;\r\n    if (!user || !user._id) {\r\n      return <Redirect to=\"/login\" />;\r\n    }\r\n\r\n    return (\r\n      <Layout style={{minHeight:'100%'}}>\r\n        <Sider>\r\n          <LeftNav/>\r\n        </Sider>\r\n        <Layout>\r\n          <Header>Header</Header>\r\n          <Content style={{ margin: 20,backgroundColor: '#fff'}}>\r\n            <Switch>\r\n              <Redirect from='/' to = '/home'  exact/>\r\n              <Route path='/home' component= {Home}></Route>\r\n              <Route path='/category' component= {Category}></Route>\r\n              <Route path='/product' component= {Product}></Route>\r\n              <Route path='/role' component= {Role}></Route>\r\n              <Route path='/user' component= {User}></Route>\r\n              <Route path='/charts/bar' component= {Bar}></Route>\r\n              <Route path='/charts/line' component= {Line}></Route>\r\n              <Route path='/charts/pie' component= {Pie}></Route>\r\n              <Route path='/order' component= {Order}></Route>\r\n              <Route component={NotFound}/>  \r\n              {/* 上面没有一个匹配  显示404界面 */}\r\n\r\n            </Switch>\r\n\r\n          </Content>\r\n          <Footer style={{textAlign: 'center', color: '#aaaaaa'}}>推荐使用谷歌浏览器， 可以获得更佳页面操作体验</Footer>\r\n        </Layout>\r\n      </Layout>\r\n    );\r\n  }\r\n}\r\n\r\nexport default connect(\r\n  state => ({user:state.user}),\r\n  {}\r\n)(Admin)\r\n","/* \r\n应用的根组件\r\n*/\r\nimport React, { Component } from \"react\";\r\n// import {Button,message} from 'antd'\r\nimport { BrowserRouter, Route, Switch } from \"react-router-dom\";\r\n\r\nimport Login from \"./pages/login/login.jsx\";\r\nimport Admin from \"./pages/admin/admin.jsx\";\r\n\r\nclass App extends Component {\r\n  render() {\r\n    return (\r\n      <BrowserRouter>\r\n        <Switch>\r\n          <Route path=\"/login\" component={Login} />\r\n          <Route path=\"/\" component={Admin} />\r\n        </Switch>\r\n      </BrowserRouter>\r\n    );\r\n  }\r\n}\r\n\r\nexport default App;\r\n","/* \r\n入口js\r\n\r\n*/\r\nimport React from 'react'\r\nimport ReactDOM from 'react-dom'\r\nimport store from './redux/store'\r\n\r\nimport App from './App'\r\nimport {Provider} from 'react-redux'\r\n\r\n// 将App组件标签渲染到index页面的div上\r\nReactDOM.render((\r\n  <Provider store={store}>\r\n    <App />\r\n  </Provider>\r\n), document.getElementById('root'))"],"sourceRoot":""}